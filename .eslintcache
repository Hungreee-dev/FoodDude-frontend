[{"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\index.js":"1","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\serviceWorker.js":"2","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\App.js":"3","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\staticPages\\RefundPolicy.js":"4","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\staticPages\\PrivacyPolicy.js":"5","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\staticPages\\TermsOfServices.js":"6","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\PrivateRoute.js":"7","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Index.js":"8","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Offers.js":"9","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\List.js":"10","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\NotFound.js":"11","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Thanks.js":"12","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Extra.js":"13","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Login.js":"14","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Register.js":"15","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\MyAccount.js":"16","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\TrackOrder.js":"17","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Invoice.js":"18","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Checkout.js":"19","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Detail.js":"20","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\staticPages\\AboutUs.js":"21","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\contexts\\AuthContext.js":"22","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\Header.js":"23","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\Footer.js":"24","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\SectionHeading.js":"25","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\PageTitle.js":"26","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\CouponCard.js":"27","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\BankOffers.js":"28","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\CardItem.js":"29","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\CategoriesCarousel.js":"30","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\FontAwesome.js":"31","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\firebase.js":"32","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\ItemsCarousel.js":"33","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\ChooseAddressCard.js":"34","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\BaseUrl.js":"35","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\CheckoutItem.js":"36","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\HeadingValue.js":"37","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\GalleryCarousel.js":"38","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\BestSeller.js":"39","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\QuickBite.js":"40","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\DropDownTitle.js":"41","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\cart\\CartDropdownItem.js":"42","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\cart\\Cart.js":"43","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\myaccount\\Offers.js":"44","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\myaccount\\Favourites.js":"45","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\myaccount\\Payments.js":"46","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\myaccount\\Addresses.js":"47","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\myaccount\\Orders.js":"48","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\modals\\EditProfileModal.js":"49","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\modals\\AddAddressModal.js":"50","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Order\\Cart.js":"51","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\home\\TopSearch.js":"52","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\home\\ProductBox.js":"53","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\MayLikeItem.js":"54","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\cart\\CartDropdownHeader.js":"55","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\OrderCard.js":"56","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\modals\\DeleteAddressModal.js":"57","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\PaymentCard.js":"58","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\AddressCard.js":"59","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\modals\\EditAddressModal.js":"60","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\ReviewCard\\index.js":"61","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\staticPages\\ContactUS\\Index.js":"62","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Input\\Index.js":"63","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\staticPages\\Popup\\index.js":"64","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\contexts\\OrderContext.js":"65","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Spinner\\index.js":"66"},{"size":609,"mtime":1612971323048,"results":"67","hashOfConfig":"68"},{"size":5086,"mtime":1612971323085,"results":"69","hashOfConfig":"68"},{"size":4455,"mtime":1613232590580,"results":"70","hashOfConfig":"68"},{"size":6807,"mtime":1613102537853,"results":"71","hashOfConfig":"68"},{"size":18382,"mtime":1613101393591,"results":"72","hashOfConfig":"68"},{"size":45269,"mtime":1613102818448,"results":"73","hashOfConfig":"68"},{"size":433,"mtime":1612971322193,"results":"74","hashOfConfig":"68"},{"size":10245,"mtime":1613223426842,"results":"75","hashOfConfig":"68"},{"size":4265,"mtime":1612971322307,"results":"76","hashOfConfig":"68"},{"size":20739,"mtime":1612971322260,"results":"77","hashOfConfig":"68"},{"size":873,"mtime":1612971322304,"results":"78","hashOfConfig":"68"},{"size":850,"mtime":1612971322405,"results":"79","hashOfConfig":"68"},{"size":8876,"mtime":1612971322237,"results":"80","hashOfConfig":"68"},{"size":14093,"mtime":1613365808439,"results":"81","hashOfConfig":"68"},{"size":10934,"mtime":1613184806395,"results":"82","hashOfConfig":"68"},{"size":4171,"mtime":1612971322267,"results":"83","hashOfConfig":"68"},{"size":5828,"mtime":1612971322408,"results":"84","hashOfConfig":"68"},{"size":6975,"mtime":1612971322246,"results":"85","hashOfConfig":"68"},{"size":22991,"mtime":1613199505008,"results":"86","hashOfConfig":"68"},{"size":8124,"mtime":1613325238758,"results":"87","hashOfConfig":"68"},{"size":3803,"mtime":1612971322916,"results":"88","hashOfConfig":"68"},{"size":3038,"mtime":1613364919601,"results":"89","hashOfConfig":"68"},{"size":8299,"mtime":1613185749418,"results":"90","hashOfConfig":"68"},{"size":3443,"mtime":1613100694939,"results":"91","hashOfConfig":"68"},{"size":795,"mtime":1612971322698,"results":"92","hashOfConfig":"68"},{"size":642,"mtime":1612971322632,"results":"93","hashOfConfig":"68"},{"size":1870,"mtime":1612971322505,"results":"94","hashOfConfig":"68"},{"size":1530,"mtime":1612971322455,"results":"95","hashOfConfig":"68"},{"size":3873,"mtime":1612971322483,"results":"96","hashOfConfig":"68"},{"size":3639,"mtime":1612971322486,"results":"97","hashOfConfig":"68"},{"size":431,"mtime":1612971322537,"results":"98","hashOfConfig":"68"},{"size":922,"mtime":1613357607454,"results":"99","hashOfConfig":"68"},{"size":2251,"mtime":1612971322600,"results":"100","hashOfConfig":"68"},{"size":1903,"mtime":1612971322493,"results":"101","hashOfConfig":"68"},{"size":104,"mtime":1612971322182,"results":"102","hashOfConfig":"68"},{"size":3102,"mtime":1613288200650,"results":"103","hashOfConfig":"68"},{"size":659,"mtime":1612971322597,"results":"104","hashOfConfig":"68"},{"size":2019,"mtime":1612971322582,"results":"105","hashOfConfig":"68"},{"size":5019,"mtime":1612971322458,"results":"106","hashOfConfig":"68"},{"size":4090,"mtime":1613326382232,"results":"107","hashOfConfig":"68"},{"size":1393,"mtime":1612971322508,"results":"108","hashOfConfig":"68"},{"size":792,"mtime":1612971322436,"results":"109","hashOfConfig":"68"},{"size":5531,"mtime":1613356615396,"results":"110","hashOfConfig":"68"},{"size":3569,"mtime":1612971322860,"results":"111","hashOfConfig":"68"},{"size":6439,"mtime":1612971322856,"results":"112","hashOfConfig":"68"},{"size":3430,"mtime":1612971322896,"results":"113","hashOfConfig":"68"},{"size":5296,"mtime":1612971322850,"results":"114","hashOfConfig":"68"},{"size":1904,"mtime":1612971322893,"results":"115","hashOfConfig":"68"},{"size":1804,"mtime":1612971322830,"results":"116","hashOfConfig":"68"},{"size":4387,"mtime":1612971322815,"results":"117","hashOfConfig":"68"},{"size":3255,"mtime":1613325238939,"results":"118","hashOfConfig":"68"},{"size":9138,"mtime":1613368593728,"results":"119","hashOfConfig":"68"},{"size":1155,"mtime":1612971322762,"results":"120","hashOfConfig":"68"},{"size":1186,"mtime":1612971322603,"results":"121","hashOfConfig":"68"},{"size":1591,"mtime":1613216041895,"results":"122","hashOfConfig":"68"},{"size":2918,"mtime":1612971322627,"results":"123","hashOfConfig":"68"},{"size":1448,"mtime":1612971322822,"results":"124","hashOfConfig":"68"},{"size":1547,"mtime":1612971322636,"results":"125","hashOfConfig":"68"},{"size":1474,"mtime":1612971322450,"results":"126","hashOfConfig":"68"},{"size":3715,"mtime":1612971322826,"results":"127","hashOfConfig":"68"},{"size":1218,"mtime":1613020591823,"results":"128","hashOfConfig":"68"},{"size":6395,"mtime":1613104053555,"results":"129","hashOfConfig":"68"},{"size":923,"mtime":1613134337219,"results":"130","hashOfConfig":"68"},{"size":441,"mtime":1613137526543,"results":"131","hashOfConfig":"68"},{"size":876,"mtime":1613287498824,"results":"132","hashOfConfig":"68"},{"size":220,"mtime":1613234744604,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"9gbhyy",{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"136"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"136"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"136"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"136"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"136"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"136"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"136"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"136"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"136"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"136"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"136"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"136"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"136"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"136"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"226"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"136"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"136"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"136"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"136"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"136"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"136"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"136"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"136"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\index.js",[],["291","292"],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\serviceWorker.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\App.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\staticPages\\RefundPolicy.js",["293"],"import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport SectionHeading from '../common/SectionHeading';\r\nfunction AboutUs(props) {\r\n    return (\r\n        <>\r\n            <section className=\"section pt-5 pb-5 bg-white homepage-add-section food-background\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col md={12} xs={12}>\r\n                            <blockquote\r\n                                class=\"blockquote blockquote-custom  p-5 shadow rounded\"\r\n                                style={{ background: 'white' }}\r\n                            >\r\n                                <SectionHeading heading=\"Refund/Cancellation Policy\" subHeading=\"\" />\r\n                                <div class=\"mb-0 mt-2 \" style={{ fontSize: '16px', color: 'black' }}>\r\n                                    <ul>\r\n                                        <li>\r\n                                            You acknowledge that your cancellation( attempted or purported) of an Order\r\n                                            shall amount to a breach of your unconditional and irrevocable authorization\r\n                                            in favour of Fooddude to place that Order against the Restaurant /Store(s)\r\n                                            on your behalf (“Authorization Breach\"). In the event you commit an\r\n                                            Authorization Breach, you shall be liable to pay the liquidated damages of\r\n                                            an amount equivalent to the Order Value. You hereby authorize Fooddude to\r\n                                            deduct or collect the amount payable as liquidated damages through such\r\n                                            means as Fooddude may determine in its discretion, including without\r\n                                            limitation, by deducting such amount from any payment made towards your next\r\n                                            Order\r\n                                        </li>\r\n                                        <li>\r\n                                            In the event, if You have provided incorrect particulars, e.g., contact\r\n                                            number, delivery address, etc., or You were unresponsive, not reachable, or\r\n                                            unavailable for the fulfillment of the services offered to You, You will not\r\n                                            be eligible for any refunds.\r\n                                        </li>\r\n                                        <li>\r\n                                            {' '}\r\n                                            No replacement/refund / or any other resolution will be provided without\r\n                                            Restaurant’s/Store(s)’ permission.\r\n                                        </li>\r\n                                        <li>\r\n                                            {' '}\r\n                                            For any complaint, concerning the Order which shall include instances but\r\n                                            not be limited to food spillage, foreign object in food, delivery of the\r\n                                            wrong order or food and beverages or Products, poor quality, You will be\r\n                                            required to share the proof of the same before any refund can be provided.\r\n                                        </li>\r\n                                        <li>\r\n                                            {' '}\r\n                                            You shall not be entitled to a refund in case instructions placed along with\r\n                                            the Order are not followed in the form and manner You had intended.\r\n                                            Instructions are followed by the Restaurant /Store on a best-efforts basis.\r\n                                        </li>\r\n                                        <li>\r\n                                            {' '}\r\n                                            All refunds shall be processed in the same manner as they are received,\r\n                                            unless refunds have been provided to You in the form of credits, the refund\r\n                                            amount will reflect in your account based on respective banks policies.\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </blockquote>\r\n                        </Col>\r\n                        {/* <Col md={4} xs={6}>\r\n\t\t\t\t\t\t\t\t<blockquote class=\"blockquote blockquote-custom  p-5 shadow rounded\" style={{height:'300px',background:'#f0f0f0'}}>\r\n\t\t\t\t\t\t\t\t\t<div class=\"blockquote-custom-icon bg-info shadow-sm\"><i class=\"fa fa-quote-left text-white\"></i></div>\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"mb-2 font-weight-normal\"><span className=\"font-weight-bold\">Quality</span></h4>\r\n\t\t\t\t\t\t\t\t\t<p class=\"mb-0 mt-2 font-italic\">\"Fooddude provides you the best food ranging from several\r\n\t\t\t\t\t\t\tcuisines from the best kitchens throughout the city. We assure you of satisfying your palette minus\r\n\t\t\t\t\t\t\tthe food colours and unnecessary oil.\"</p>\r\n\r\n\t\t\t\t\t\t\t\t</blockquote>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col md={4} xs={6}>\r\n\t\t\t\t\t\t\t\t<blockquote class=\"blockquote blockquote-custom  p-5 shadow rounded\" style={{background:'#f0f0f0'}}>\r\n\t\t\t\t\t\t\t\t\t<div class=\"blockquote-custom-icon bg-info shadow-sm\"><i class=\"fa fa-quote-left text-white\"></i></div>\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"mb-2 font-weight-normal\"><span className=\"font-weight-bold\">Hygiene</span></h4>\r\n\t\t\t\t\t\t\t\t\t<p class=\"mb-0 mt-2 font-italic\">\"The pandemic has forced us to rethink our\r\n\t\t\t\t\t\t\tsanitary practices. But, Fooddude promises that you'll never have to think twice while ordering from us.\r\n\t\t\t\t\t\t\tOur delivery agents are checked and sanitized regularly\r\n\t\t\t\t\t\t\t and use masks and gloves throughout the process to ensure your food reaches to you safely.\"</p>\r\n\r\n\t\t\t\t\t\t\t\t</blockquote>\r\n\t\t\t\t\t\t\t</Col> */}\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nconst options = {\r\n    responsive: {\r\n        0: {\r\n            items: 1,\r\n        },\r\n        600: {\r\n            items: 2,\r\n        },\r\n        1000: {\r\n            items: 4,\r\n        },\r\n        1200: {\r\n            items: 4,\r\n        },\r\n    },\r\n\r\n    lazyLoad: true,\r\n    pagination: false.toString(),\r\n    loop: true,\r\n    dots: false,\r\n    autoPlay: 2000,\r\n    nav: true,\r\n    navText: [\"<i class='fa fa-chevron-left'></i>\", \"<i class='fa fa-chevron-right'></i>\"],\r\n};\r\n\r\nexport default AboutUs;\r\n","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\staticPages\\PrivacyPolicy.js",["294"],"import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport SectionHeading from '../common/SectionHeading';\r\nfunction PrivacyPolicy(props) {\r\n    return (\r\n        <>\r\n            <section className=\"section pt-5 pb-5 bg-white homepage-add-section food-background\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col md={12} xs={12}>\r\n                            <blockquote\r\n                                class=\"blockquote blockquote-custom  p-5 shadow rounded\"\r\n                                style={{ background: 'white' }}\r\n                            >\r\n                                <SectionHeading heading=\"Privacy Policy\" subHeading=\"\" />\r\n                                <div class=\"mb-0 mt-2\" style={{ fontSize: '16px', color: '#454040' }}>\r\n                                    <p style={{ color: 'black' }}>\r\n                                        <strong>\r\n                                            <u>WHAT DO WE DO WITH YOUR INFORMATION?</u>\r\n                                        </strong>\r\n                                    </p>\r\n                                    <p>\r\n                                        When you purchase something from our store, as part of the buying and selling\r\n                                        process, we collect the personal information you give us such as your name,\r\n                                        address and email address.\r\n                                    </p>\r\n                                    <p>\r\n                                        When you browse our store, we also automatically receive your computer&rsquo;s\r\n                                        internet protocol (IP) address in order to provide us with information that\r\n                                        helps us learn about your browser and operating system.\r\n                                    </p>\r\n                                    <p>\r\n                                        Email marketing (if applicable): With your permission, we may send you emails\r\n                                        about our store, new products and other updates.\r\n                                    </p>\r\n                                    <p style={{ color: 'black' }}>\r\n                                        <strong>\r\n                                            <u>CONSENT</u>\r\n                                        </strong>\r\n                                    </p>\r\n                                    <p>How do you get my consent?</p>\r\n                                    <p>\r\n                                        When you provide us with personal information to complete a transaction, verify\r\n                                        your credit card, place an order, arrange for a delivery or return a purchase,\r\n                                        we imply that you consent to our collecting it and using it for that specific\r\n                                        reason only.\r\n                                    </p>\r\n                                    <p>\r\n                                        If we ask for your personal information for a secondary reason, like marketing,\r\n                                        we will either ask you directly for your expressed consent, or provide you with\r\n                                        an opportunity to say no.\r\n                                    </p>\r\n                                    <p>How do I withdraw my consent?</p>\r\n                                    <p>\r\n                                        If after you opt-in, you change your mind, you may withdraw your consent for us\r\n                                        to contact you, for the continued collection, use or disclosure of your\r\n                                        information, at anytime, by contacting us at&nbsp;\r\n                                        <strong>\r\n                                            <a href=\"mailto:info@fooddude.in\" target=\"_blank\" rel=\"noreferrer\">\r\n                                                info@fooddude.in\r\n                                            </a>\r\n                                            &nbsp;\r\n                                        </strong>\r\n                                        or mailing us at:&nbsp;\r\n                                        <strong style={{ color: 'black' }}>\r\n                                            <a\r\n                                                href=\"https://maps.apple.com/?ll=20.2386,85.8397\"\r\n                                                target=\"_blank\"\r\n                                                rel=\"noreferrer\"\r\n                                            >\r\n                                                Head Office.\r\n                                            </a>\r\n                                        </strong>\r\n                                    </p>\r\n                                    <p style={{ color: 'black' }}>\r\n                                        <strong>\r\n                                            <u>DISCLOSURE</u>\r\n                                        </strong>\r\n                                    </p>\r\n                                    <p>\r\n                                        We may disclose your personal information if we are required by law to do so or\r\n                                        if you violate our Terms of Service.\r\n                                    </p>\r\n                                    <p style={{ color: 'black' }}>\r\n                                        <strong>\r\n                                            <u>PAYMENT</u>\r\n                                        </strong>\r\n                                    </p>\r\n                                    <p>\r\n                                        We use Razorpay for processing payments. We/Razorpay do not store your card data\r\n                                        on their servers. The data is encrypted through the Payment Card Industry Data\r\n                                        Security Standard (PCI-DSS) when processing payment. Your purchase transaction\r\n                                        data is only used as long as is necessary to complete your purchase transaction.\r\n                                        After that is complete, your purchase transaction information is not saved.\r\n                                    </p>\r\n                                    <p>\r\n                                        Our payment gateway adheres to the standards set by PCI-DSS as managed by the\r\n                                        PCI Security Standards Council, which is a joint effort of brands like Visa,\r\n                                        MasterCard, American Express and Discover.\r\n                                    </p>\r\n                                    <p>\r\n                                        PCI-DSS requirements help ensure the secure handling of credit card information\r\n                                        by our store and its service providers.\r\n                                    </p>\r\n                                    <p>\r\n                                        For more insight, you may also want to read terms and conditions of razorpay\r\n                                        on&nbsp;\r\n                                        <a href=\"https://www.google.com/url?q=https://razorpay.com&amp;sa=D&amp;source=editors&amp;ust=1612337595002000&amp;usg=AOvVaw05kP8IAddGS3qZalolbPfU\">\r\n                                            Here.\r\n                                        </a>\r\n                                    </p>\r\n                                    <p style={{ color: 'black' }}>\r\n                                        <strong>\r\n                                            <u>THIRD-PARTY SERVICES</u>\r\n                                        </strong>\r\n                                    </p>\r\n                                    <p>\r\n                                        In general, the third-party providers used by us will only collect, use and\r\n                                        disclose your information to the extent necessary to allow them to perform the\r\n                                        services they provide to us.\r\n                                    </p>\r\n                                    <p>\r\n                                        However, certain third-party service providers, such as payment gateways and\r\n                                        other payment transaction processors, have their own privacy policies in respect\r\n                                        to the information we are required to provide to them for your purchase-related\r\n                                        transactions.\r\n                                    </p>\r\n                                    <p>\r\n                                        For these providers, we recommend that you read their privacy policies so you\r\n                                        can understand the manner in which your personal information will be handled by\r\n                                        these providers.\r\n                                    </p>\r\n                                    <p>\r\n                                        In particular, remember that certain providers may be located in or have\r\n                                        facilities that are located a different jurisdiction than either you or us. So\r\n                                        if you elect to proceed with a transaction that involves the services of a\r\n                                        third-party service provider, then your information may become subject to the\r\n                                        laws of the jurisdiction(s) in which that service provider or its facilities are\r\n                                        located.\r\n                                    </p>\r\n                                    <p>\r\n                                        Once you leave our store&rsquo;s website or are redirected to a third-party\r\n                                        website or application, you are no longer governed by this Privacy Policy or our\r\n                                        website&rsquo;s Terms of Service.\r\n                                    </p>\r\n                                    <p style={{ color: 'black' }}>\r\n                                        <strong>\r\n                                            <u>LINKS</u>\r\n                                        </strong>\r\n                                    </p>\r\n                                    <p>\r\n                                        When you click on links on our store, they may direct you away from our site. We\r\n                                        are not responsible for the privacy practices of other sites and encourage you\r\n                                        to read their privacy statements.\r\n                                    </p>\r\n                                    <p style={{ color: 'black' }}>\r\n                                        <strong>\r\n                                            <u>SECURITY</u>\r\n                                        </strong>\r\n                                    </p>\r\n                                    <p>\r\n                                        To protect your personal information, we take reasonable precautions and follow\r\n                                        industry best practices to make sure it is not inappropriately lost, misused,\r\n                                        accessed, disclosed, altered or destroyed.\r\n                                    </p>\r\n                                    <p style={{ color: 'black' }}>\r\n                                        <strong>\r\n                                            <u>COOKIES</u>\r\n                                        </strong>\r\n                                    </p>\r\n                                    <p>\r\n                                        We use cookies to maintain session of your user. It is not used to personally\r\n                                        identify you on other websites.\r\n                                    </p>\r\n                                    <p style={{ color: 'black' }}>\r\n                                        <strong>\r\n                                            <u>AGE OF CONSENT</u>\r\n                                        </strong>\r\n                                    </p>\r\n                                    <p>\r\n                                        By using this site, you represent that you are at least the age of majority in\r\n                                        your state or province of residence, or that you are the age of majority in your\r\n                                        state or province of residence and you have given us your consent to allow any\r\n                                        of your minor dependents to use this site.\r\n                                    </p>\r\n                                    <p style={{ color: 'black' }}>\r\n                                        <strong>\r\n                                            <u>CHANGES TO THIS PRIVACY POLICY</u>\r\n                                        </strong>\r\n                                    </p>\r\n                                    <p>\r\n                                        We reserve the right to modify this privacy policy at any time, so please review\r\n                                        it frequently. Changes and clarifications will take effect immediately upon\r\n                                        their posting on the website. If we make material changes to this policy, we\r\n                                        will notify you here that it has been updated, so that you are aware of what\r\n                                        information we collect, how we use it, and under what circumstances, if any, we\r\n                                        use and/or disclose it.\r\n                                    </p>\r\n                                    <p>\r\n                                        If our store is acquired or merged with another company, your information may be\r\n                                        transferred to the new owners so that we may continue to sell products to you.\r\n                                    </p>\r\n                                    <p style={{ color: 'black' }}>\r\n                                        <strong>\r\n                                            <u>QUESTIONS AND CONTACT INFORMATION</u>\r\n                                        </strong>\r\n                                    </p>\r\n                                    <p>\r\n                                        If you would like to: access, correct, amend or delete any personal information\r\n                                        we have about you, register a complaint, or simply want more information contact\r\n                                        our Privacy Compliance Officer at&nbsp;\r\n                                        <strong>\r\n                                            <a href=\"mailto:info@fooddude.in\" target=\"_blank\" rel=\"noreferrer\">\r\n                                                info@fooddude.in\r\n                                            </a>\r\n                                            &nbsp;\r\n                                        </strong>\r\n                                        or by mail at&nbsp;\r\n                                        <strong style={{ color: 'black' }}>\r\n                                            <a\r\n                                                href=\"https://maps.apple.com/?ll=20.2386,85.8397\"\r\n                                                target=\"_blank\"\r\n                                                rel=\"noreferrer\"\r\n                                            >\r\n                                                Head Office.\r\n                                            </a>\r\n                                        </strong>\r\n                                    </p>\r\n                                    <p>&nbsp;</p>\r\n                                </div>\r\n                            </blockquote>\r\n                        </Col>\r\n                        {/* <Col md={4} xs={6}>\r\n\t\t\t\t\t\t\t\t<blockquote class=\"blockquote blockquote-custom  p-5 shadow rounded\" style={{height:'300px',background:'#f0f0f0'}}>\r\n\t\t\t\t\t\t\t\t\t<div class=\"blockquote-custom-icon bg-info shadow-sm\"><i class=\"fa fa-quote-left text-white\"></i></div>\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"mb-2 font-weight-normal\"><span className=\"font-weight-bold\">Quality</span></h4>\r\n\t\t\t\t\t\t\t\t\t<p class=\"mb-0 mt-2 font-italic\">\"Fooddude provides you the best food ranging from several\r\n\t\t\t\t\t\t\tcuisines from the best kitchens throughout the city. We assure you of satisfying your palette minus\r\n\t\t\t\t\t\t\tthe food colours and unnecessary oil.\"</p>\r\n\r\n\t\t\t\t\t\t\t\t</blockquote>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col md={4} xs={6}>\r\n\t\t\t\t\t\t\t\t<blockquote class=\"blockquote blockquote-custom  p-5 shadow rounded\" style={{background:'#f0f0f0'}}>\r\n\t\t\t\t\t\t\t\t\t<div class=\"blockquote-custom-icon bg-info shadow-sm\"><i class=\"fa fa-quote-left text-white\"></i></div>\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"mb-2 font-weight-normal\"><span className=\"font-weight-bold\">Hygiene</span></h4>\r\n\t\t\t\t\t\t\t\t\t<p class=\"mb-0 mt-2 font-italic\">\"The pandemic has forced us to rethink our\r\n\t\t\t\t\t\t\tsanitary practices. But, Fooddude promises that you'll never have to think twice while ordering from us.\r\n\t\t\t\t\t\t\tOur delivery agents are checked and sanitized regularly\r\n\t\t\t\t\t\t\t and use masks and gloves throughout the process to ensure your food reaches to you safely.\"</p>\r\n\r\n\t\t\t\t\t\t\t\t</blockquote>\r\n\t\t\t\t\t\t\t</Col> */}\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nconst options = {\r\n    responsive: {\r\n        0: {\r\n            items: 1,\r\n        },\r\n        600: {\r\n            items: 2,\r\n        },\r\n        1000: {\r\n            items: 4,\r\n        },\r\n        1200: {\r\n            items: 4,\r\n        },\r\n    },\r\n\r\n    lazyLoad: true,\r\n    pagination: false.toString(),\r\n    loop: true,\r\n    dots: false,\r\n    autoPlay: 2000,\r\n    nav: true,\r\n    navText: [\"<i class='fa fa-chevron-left'></i>\", \"<i class='fa fa-chevron-right'></i>\"],\r\n};\r\n\r\nexport default PrivacyPolicy;\r\n","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\staticPages\\TermsOfServices.js",["295"],"import React from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport SectionHeading from '../common/SectionHeading';\r\nimport './termsOfServices.css';\r\nfunction AboutUs(props) {\r\n    return (\r\n        <>\r\n            <section className=\"section pt-5 pb-5 bg-white homepage-add-section food-background\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col md={12} xs={12}>\r\n                            <blockquote\r\n                                class=\"blockquote blockquote-custom  p-5 shadow rounded\"\r\n                                style={{ background: 'white' }}\r\n                            >\r\n                                <SectionHeading heading=\"Refund/Cancellation Policy\" subHeading=\"\" />\r\n                                <div class=\"mb-0 mt-2\" style={{ fontSize: '16px', color: 'black' }}>\r\n                                    <div>\r\n                                        <p>\r\n                                            This website is operated by&nbsp;\r\n                                            <strong style={{ color: 'black' }}>\r\n                                                [FOODDUDE, a unit of RITIKJANNAT SOLUTIONS PVT. LTD. ]\r\n                                            </strong>\r\n                                            . Throughout the site, the terms “we”, “us” and “our” refer to\r\n                                            <strong style={{ color: 'black' }}>\r\n                                                &nbsp;[FOODDUDE, a unit of RITIKJANNAT SOLUTIONS PVT. LTD.]\r\n                                            </strong>\r\n                                            .&nbsp;\r\n                                            <strong style={{ color: 'black' }}>\r\n                                                [FOODDUDE, a unit of RITIKJANNAT SOLUTIONS PVT. LTD.]\r\n                                            </strong>\r\n                                            &nbsp;offers this website, including all information, tools and services\r\n                                            available from this site to you, the user, conditioned upon your acceptance\r\n                                            of all terms, conditions, policies and notices stated here.\r\n                                        </p>\r\n                                        <p>\r\n                                            By visiting our site and/ or purchasing something from us, you engage in our\r\n                                            “Service” and agree to be bound by the following terms and conditions\r\n                                            (“Terms of Service”, “Terms”), including those additional terms and\r\n                                            conditions and policies referenced herein and/or available by hyperlink.\r\n                                            These Terms of Service apply &nbsp;to all users of the site, including\r\n                                            without limitation users who are browsers, vendors, customers, merchants,\r\n                                            and/ or contributors of content.\r\n                                        </p>\r\n                                        <p>\r\n                                            Please read these Terms of Service carefully before accessing or using our\r\n                                            website. By accessing or using any part of the site, you agree to be bound\r\n                                            by these Terms of Service. If you do not agree to all the terms and\r\n                                            conditions of this agreement, then you may not access the website or use any\r\n                                            services. If these Terms of Service are considered an offer, acceptance is\r\n                                            expressly limited to these Terms of Service.\r\n                                        </p>\r\n                                        <p>\r\n                                            Any new features or tools which are added to the current store shall also be\r\n                                            subject to the Terms of Service. You can review the most current version of\r\n                                            the Terms of Service at any time on this page. We reserve the right to\r\n                                            update, change or replace any part of these Terms of Service by posting\r\n                                            updates and/or changes to our website. It is your responsibility to check\r\n                                            this page periodically for changes. Your continued use of or access to the\r\n                                            website following the posting of any changes constitutes acceptance of those\r\n                                            changes.\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>ONLINE STORE TERMS</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            By agreeing to these Terms of Service, you represent that you are at least\r\n                                            the age of majority in your state or province of residence, or that you are\r\n                                            the age of majority in your state or province of residence and you have\r\n                                            given us your consent to allow any of your minor dependents to use this\r\n                                            site.\r\n                                        </p>\r\n                                        <p>\r\n                                            You may not use our products for any illegal or unauthorized purpose nor may\r\n                                            you, in the use of the Service, violate any laws in your jurisdiction\r\n                                            (including but not limited to copyright laws).\r\n                                        </p>\r\n                                        <p>\r\n                                            You must not transmit any worms or viruses or any code of a destructive\r\n                                            nature.\r\n                                        </p>\r\n                                        <p>\r\n                                            A breach or violation of any of the Terms will result in an immediate\r\n                                            termination of your Services.\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>GENERAL CONDITIONS</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            We reserve the right to refuse service to anyone for any reason at any time.\r\n                                        </p>\r\n                                        <p>\r\n                                            You understand that your content (not including credit card information),\r\n                                            may be transferred unencrypted and involve (a) transmissions over various\r\n                                            networks; and (b) changes to conform and adapt to technical requirements of\r\n                                            connecting networks or devices. Credit card information is always encrypted\r\n                                            during transfer over networks.\r\n                                        </p>\r\n                                        <p>\r\n                                            You agree not to reproduce, duplicate, copy, sell, resell or exploit any\r\n                                            portion of the Service, use of the Service, or access to the Service or any\r\n                                            contact on the website through which the service is provided, without\r\n                                            express written permission by us.\r\n                                        </p>\r\n                                        <p>\r\n                                            The headings used in this agreement are included for convenience only and\r\n                                            will not limit or otherwise affect these Terms.\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>ACCURACY, COMPLETENESS AND TIMELINESS OF INFORMATION</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            We are not responsible if information made available on this site is not\r\n                                            accurate, complete or current. The material on this site is provided for\r\n                                            general information only and should not be relied upon or used as the sole\r\n                                            basis for making decisions without consulting primary, more accurate, more\r\n                                            complete or more timely sources of information. Any reliance on the material\r\n                                            on this site is at your own risk.\r\n                                        </p>\r\n                                        <p>\r\n                                            This site may contain certain historical information. Historical\r\n                                            information, necessarily, is not current and is provided for your reference\r\n                                            only. We reserve the right to modify the contents of this site at any time,\r\n                                            but we have no obligation to update any information on our site. You agree\r\n                                            that it is your responsibility to monitor changes to our site.\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>MODIFICATIONS TO THE SERVICE AND PRICES</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>Prices for our products are subject to change without notice.</p>\r\n                                        <p>\r\n                                            We reserve the right at any time to modify or discontinue the Service (or\r\n                                            any part or content thereof) without notice at any time.\r\n                                        </p>\r\n                                        <p>\r\n                                            We shall not be liable to you or to any third-party for any modification,\r\n                                            price change, suspension or discontinuance of the Service.\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>PRODUCTS OR SERVICES</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            Certain products or services may be available exclusively online through the\r\n                                            website. These products or services may have limited quantities and are\r\n                                            subject to return or exchange only according to our Return Policy.\r\n                                        </p>\r\n                                        <p>\r\n                                            We have made every effort to display as accurately as possible the colors\r\n                                            and images of our products that appear at the store. We cannot guarantee\r\n                                            that your computer monitor's display of any color will be accurate.\r\n                                        </p>\r\n                                        <p>\r\n                                            We reserve the right, but are not obligated, to limit the sales of our\r\n                                            products or Services to any person, geographic region or jurisdiction. We\r\n                                            may exercise this right on a case-by-case basis. We reserve the right to\r\n                                            limit the quantities of any products or services that we offer. All\r\n                                            descriptions of products or product pricing are subject to change at anytime\r\n                                            without notice, at the sole discretion of us. We reserve the right to\r\n                                            discontinue any product at any time. Any offer for any product or service\r\n                                            made on this site is void where prohibited.\r\n                                        </p>\r\n                                        <p>\r\n                                            We do not warrant that the quality of any products, services, information,\r\n                                            or other material purchased or obtained by you will meet your expectations,\r\n                                            or that any errors in the Service will be corrected.\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>ACCURACY OF BILLING AND ACCOUNT INFORMATION</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            We reserve the right to refuse any order you place with us. We may, in our\r\n                                            sole discretion, limit or cancel quantities purchased per person, per\r\n                                            household or per order. These restrictions may include orders placed by or\r\n                                            under the same customer account, the same credit card, and/or orders that\r\n                                            use the same billing and/or shipping address. In the event that we make a\r\n                                            change to or cancel an order, we may attempt to notify you by contacting the\r\n                                            e-mail and/or billing address/phone number provided at the time the order\r\n                                            was made. We reserve the right to limit or prohibit orders that, in our sole\r\n                                            judgment, appear to be placed by dealers, resellers or distributors.\r\n                                        </p>\r\n                                        <p>\r\n                                            You agree to provide current, complete and accurate purchase and account\r\n                                            information for all purchases made at our store. You agree to promptly\r\n                                            update your account and other information, including your email address and\r\n                                            credit card numbers and expiration dates, so that we can complete your\r\n                                            transactions and contact you as needed.\r\n                                        </p>\r\n                                        <p>For more detail, please review our Returns Policy.</p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>OPTIONAL TOOLS</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            We may provide you with access to third-party tools over which we neither\r\n                                            monitor nor have any control nor input.\r\n                                        </p>\r\n                                        <p>\r\n                                            You acknowledge and agree that we provide access to such tools ”as is” and\r\n                                            “as available” without any warranties, representations or conditions of any\r\n                                            kind and without any endorsement. We shall have no liability whatsoever\r\n                                            arising from or relating to your use of optional third-party tools.\r\n                                        </p>\r\n                                        <p>\r\n                                            Any use by you of optional tools offered through the site is entirely at\r\n                                            your own risk and discretion and you should ensure that you are familiar\r\n                                            with and approve of the terms on which tools are provided by the relevant\r\n                                            third-party provider(s).\r\n                                        </p>\r\n                                        <p>\r\n                                            We may also, in the future, offer new services and/or features through the\r\n                                            website (including, the release of new tools and resources). Such new\r\n                                            features and/or services shall also be subject to these Terms of Service.\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>THIRD-PARTY LINKS</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            Certain content, products and services available via our Service may include\r\n                                            materials from third-parties.\r\n                                        </p>\r\n                                        <p>\r\n                                            Third-party links on this site may direct you to third-party websites that\r\n                                            are not affiliated with us. We are not responsible for examining or\r\n                                            evaluating the content or accuracy and we do not warrant and will not have\r\n                                            any liability or responsibility for any third-party materials or websites,\r\n                                            or for any other materials, products, or services of third-parties.\r\n                                        </p>\r\n                                        <p>\r\n                                            We are not liable for any harm or damages related to the purchase or use of\r\n                                            goods, services, resources, content, or any other transactions made in\r\n                                            connection with any third-party websites. Please review carefully the\r\n                                            third-party's policies and practices and make sure you understand them\r\n                                            before you engage in any transaction. Complaints, claims, concerns, or\r\n                                            questions regarding third-party products should be directed to the\r\n                                            third-party.\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>USER COMMENTS, FEEDBACK AND OTHER SUBMISSIONS</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            If, at our request, you send certain specific submissions (for example\r\n                                            contest entries) or without a request from us you send creative ideas,\r\n                                            suggestions, proposals, plans, or other materials, whether online, by email,\r\n                                            by postal mail, or otherwise (collectively, 'comments'), you agree that we\r\n                                            may, at any time, without restriction, edit, copy, publish, distribute,\r\n                                            translate and otherwise use in any medium any comments that you forward to\r\n                                            us. We are and shall be under no obligation (1) to maintain any comments in\r\n                                            confidence; (2) to pay compensation for any comments; or (3) to respond to\r\n                                            any comments.\r\n                                        </p>\r\n                                        <p>\r\n                                            We may, but have no obligation to, monitor, edit or remove content that we\r\n                                            determine in our sole discretion are unlawful, offensive, threatening,\r\n                                            libelous, defamatory, pornographic, obscene or otherwise objectionable or\r\n                                            violates any party’s intellectual property or these Terms of Service.\r\n                                        </p>\r\n                                        <p>\r\n                                            You agree that your comments will not violate any right of any third-party,\r\n                                            including copyright, trademark, privacy, personality or other personal or\r\n                                            proprietary right. You further agree that your comments will not contain\r\n                                            libelous or otherwise unlawful, abusive or obscene material, or contain any\r\n                                            computer virus or other malware that could in any way affect the operation\r\n                                            of the Service or any related website. You may not use a false e-mail\r\n                                            address, pretend to be someone other than yourself, or otherwise mislead us\r\n                                            or third-parties as to the origin of any comments. You are solely\r\n                                            responsible for any comments you make and their accuracy. We take no\r\n                                            responsibility and assume no liability for any comments posted by you or any\r\n                                            third-party.\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>PERSONAL INFORMATION</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            Your submission of personal information through the store is governed by our\r\n                                            Privacy Policy.\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>ERRORS, INACCURACIES AND OMISSIONS</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            Occasionally there may be information on our site or in the Service that\r\n                                            contains typographical errors, inaccuracies or omissions that may relate to\r\n                                            product descriptions, pricing, promotions, offers, product shipping charges,\r\n                                            transit times and availability. We reserve the right to correct any errors,\r\n                                            inaccuracies or omissions, and to change or update information or cancel\r\n                                            orders if any information in the Service or on any related website is\r\n                                            inaccurate at any time without prior notice (including after you have\r\n                                            submitted your order).\r\n                                        </p>\r\n                                        <p>\r\n                                            We undertake no obligation to update, amend or clarify information in the\r\n                                            Service or on any related website, including without limitation, pricing\r\n                                            information, except as required by law. No specified update or refresh date\r\n                                            applied in the Service or on any related website, should be taken to\r\n                                            indicate that all information in the Service or on any related website has\r\n                                            been modified or updated.\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>SECTION 12 - PROHIBITED USES</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            In addition to other prohibitions as set forth in the Terms of Service, you\r\n                                            are prohibited from using the site or its content: (a) for any unlawful\r\n                                            purpose; (b) to solicit others to perform or participate in any unlawful\r\n                                            acts; (c) to violate any international, federal, provincial or state\r\n                                            regulations, rules, laws, or local ordinances; (d) to infringe upon or\r\n                                            violate our intellectual property rights or the intellectual property rights\r\n                                            of others; (e) to harass, abuse, insult, harm, defame, slander, disparage,\r\n                                            intimidate, or discriminate based on gender, sexual orientation, religion,\r\n                                            ethnicity, race, age, national origin, or disability; (f) to submit false or\r\n                                            misleading information; (g) to upload or transmit viruses or any other type\r\n                                            of malicious code that will or may be used in any way that will affect the\r\n                                            functionality or operation of the Service or of any related website, other\r\n                                            websites, or the Internet; (h) to collect or track the personal information\r\n                                            of others; (i) to spam, phish, pharm, pretext, spider, crawl, or scrape; (j)\r\n                                            for any obscene or immoral purpose; or (k) to interfere with or circumvent\r\n                                            the security features of the Service or any related website, other websites,\r\n                                            or the Internet. We reserve the right to terminate your use of the Service\r\n                                            or any related website for violating any of the prohibited uses.\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>DISCLAIMER OF WARRANTIES; LIMITATION OF LIABILITY</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            We do not guarantee, represent or warrant that your use of our service will\r\n                                            be uninterrupted, timely, secure or error-free.\r\n                                        </p>\r\n                                        <p>\r\n                                            We do not warrant that the results that may be obtained from the use of the\r\n                                            service will be accurate or reliable.\r\n                                        </p>\r\n                                        <p>\r\n                                            You agree that from time to time we may remove the service for indefinite\r\n                                            periods of time or cancel the service at any time, without notice to you.\r\n                                        </p>\r\n                                        <p>\r\n                                            You expressly agree that your use of, or inability to use, the service is at\r\n                                            your sole risk. The service and all products and services delivered to you\r\n                                            through the service are (except as expressly stated by us) provided 'as is'\r\n                                            and 'as available' for your use, without any representation, warranties or\r\n                                            conditions of any kind, either express or implied, including all implied\r\n                                            warranties or conditions of merchantability, merchantable quality, fitness\r\n                                            for a particular purpose, durability, title, and non-infringement.\r\n                                        </p>\r\n                                        <p>\r\n                                            In no case shall\r\n                                            <strong style={{ color: 'black' }}>\r\n                                                &nbsp;[FOODDUDE, a unit of RITIKJANNAT SOLUTIONS PVT. LTD. Company Name]\r\n                                            </strong>\r\n                                            , our directors, officers, employees, affiliates, agents, contractors,\r\n                                            interns, suppliers, service providers or licensors be liable for any injury,\r\n                                            loss, claim, or any direct, indirect, incidental, punitive, special, or\r\n                                            consequential damages of any kind, including, without limitation lost\r\n                                            profits, lost revenue, lost savings, loss of data, replacement costs, or any\r\n                                            similar damages, whether based in contract, tort (including negligence),\r\n                                            strict liability or otherwise, arising from your use of any of the service\r\n                                            or any products procured using the service, or for any other claim related\r\n                                            in any way to your use of the service or any product, including, but not\r\n                                            limited to, any errors or omissions in any content, or any loss or damage of\r\n                                            any kind incurred as a result of the use of the service or any content (or\r\n                                            product) posted, transmitted, or otherwise made available via the service,\r\n                                            even if advised of their possibility. Because some states or jurisdictions\r\n                                            do not allow the exclusion or the limitation of liability for consequential\r\n                                            or incidental damages, in such states or jurisdictions, our liability shall\r\n                                            be limited to the maximum extent permitted by law.\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>INDEMNIFICATION</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            You agree to indemnify, defend and hold harmless&nbsp;\r\n                                            <strong style={{ color: 'black' }}>\r\n                                                [FOODDUDE, a unit of RITIKJANNAT SOLUTIONS PVT. LTD. ]&nbsp;\r\n                                            </strong>\r\n                                            and our parent, subsidiaries, affiliates, partners, officers, directors,\r\n                                            agents, contractors, licensors, service providers, subcontractors,\r\n                                            suppliers, interns and employees, harmless from any claim or demand,\r\n                                            including reasonable attorneys’ fees, made by any third-party due to or\r\n                                            arising out of your breach of these Terms of Service or the documents they\r\n                                            incorporate by reference, or your violation of any law or the rights of a\r\n                                            third-party.\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>SEVERABILITY</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            In the event that any provision of these Terms of Service is determined to\r\n                                            be unlawful, void or unenforceable, such provision shall nonetheless be\r\n                                            enforceable to the fullest extent permitted by applicable law, and the\r\n                                            unenforceable portion shall be deemed to be severed from these Terms of\r\n                                            Service, such determination shall not affect the validity and enforceability\r\n                                            of any other remaining provisions.\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>TERMINATION</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            The obligations and liabilities of the parties incurred prior to the\r\n                                            termination date shall survive the termination of this agreement for all\r\n                                            purposes.\r\n                                        </p>\r\n                                        <p>\r\n                                            These Terms of Service are effective unless and until terminated by either\r\n                                            you or us. You may terminate these Terms of Service at any time by notifying\r\n                                            us that you no longer wish to use our Services, or when you cease using our\r\n                                            site.\r\n                                        </p>\r\n                                        <p>\r\n                                            If in our sole judgment you fail, or we suspect that you have failed, to\r\n                                            comply with any term or provision of these Terms of Service, we also may\r\n                                            terminate this agreement at any time without notice and you will remain\r\n                                            liable for all amounts due up to and including the date of termination;\r\n                                            and/or accordingly may deny you access to our Services (or any part\r\n                                            thereof).\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>ENTIRE AGREEMENT</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            The failure of us to exercise or enforce any right or provision of these\r\n                                            Terms of Service shall not constitute a waiver of such right or provision.\r\n                                        </p>\r\n                                        <p>\r\n                                            These Terms of Service and any policies or operating rules posted by us on\r\n                                            this site or in respect to The Service constitutes the entire agreement and\r\n                                            understanding between you and us and govern your use of the Service,\r\n                                            superseding any prior or contemporaneous agreements, communications and\r\n                                            proposals, whether oral or written, between you and us (including, but not\r\n                                            limited to, any prior versions of the Terms of Service).\r\n                                        </p>\r\n                                        <p>\r\n                                            Any ambiguities in the interpretation of these Terms of Service shall not be\r\n                                            construed against the drafting party.\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>GOVERNING LAW</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            These Terms of Service and any separate agreements whereby we provide you\r\n                                            Services shall be governed by and construed in accordance with the laws of\r\n                                            India and jurisdiction of Jaipur, Rajasthan\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p>&nbsp;</p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>CHANGES TO TERMS OF SERVICE</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            You can review the most current version of the Terms of Service at any time\r\n                                            at this page.\r\n                                        </p>\r\n                                        <p>\r\n                                            We reserve the right, at our sole discretion, to update, change or replace\r\n                                            any part of these Terms of Service by posting updates and changes to our\r\n                                            website. It is your responsibility to check our website periodically for\r\n                                            changes. Your continued use of or access to our website or the Service\r\n                                            following the posting of any changes to these Terms of Service constitutes\r\n                                            acceptance of those changes.\r\n                                        </p>\r\n                                        <p style={{ color: 'black' }}>\r\n                                            <strong>\r\n                                                <u>CONTACT INFORMATION</u>\r\n                                            </strong>\r\n                                        </p>\r\n                                        <p>\r\n                                            Questions about the Terms of Service should be sent to us at&nbsp;\r\n                                            <strong style={{ color: 'black' }}>\r\n                                                <a href=\"mailto:info@fooddude.in\" target=\"_blank\" rel=\"noreferrer\">\r\n                                                    info@fooddude.in\r\n                                                </a>\r\n                                            </strong>\r\n                                            .\r\n                                        </p>\r\n                                        <p>&nbsp;</p>\r\n                                    </div>\r\n                                </div>\r\n                            </blockquote>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        </>\r\n    );\r\n}\r\n\r\nconst options = {\r\n    responsive: {\r\n        0: {\r\n            items: 1,\r\n        },\r\n        600: {\r\n            items: 2,\r\n        },\r\n        1000: {\r\n            items: 4,\r\n        },\r\n        1200: {\r\n            items: 4,\r\n        },\r\n    },\r\n\r\n    lazyLoad: true,\r\n    pagination: false.toString(),\r\n    loop: true,\r\n    dots: false,\r\n    autoPlay: 2000,\r\n    nav: true,\r\n    navText: [\"<i class='fa fa-chevron-left'></i>\", \"<i class='fa fa-chevron-right'></i>\"],\r\n};\r\n\r\nexport default AboutUs;\r\n","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\PrivateRoute.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Index.js",["296","297","298"],"import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport OwlCarousel from 'react-owl-carousel3';\r\nimport TopSearch from './home/TopSearch';\r\nimport ProductBox from './home/ProductBox';\r\nimport Header from './common/Header';\r\nimport CardItem from './common/CardItem';\r\nimport SectionHeading from './common/SectionHeading';\r\nimport FontAwesome from './common/FontAwesome';\r\nimport Image from '../assets/test.jpg';\r\nimport ReviewCard from './ReviewCard/index';\r\n\r\nfunction Index(props) {\r\n    const [reviews, setReviews] = useState([]);\r\n    useEffect(() => {\r\n        setReviews([\r\n            {\r\n                photoURL: Image,\r\n                review:\r\n                    'Fooddude provides you the best food ranging from several cuisines from the best kitchens throughout the city.Fooddude provides you the best food ranging from several cuisines from the best kitchens throughout the city.',\r\n                username: 'Robert Smith',\r\n                rating: 4.3,\r\n            },\r\n            {\r\n                photoURL: Image,\r\n                review:\r\n                    'Fooddude provides you the best food ranging from several cuisines from the best kitchens throughout the city.Fooddude provides you the best food ranging from several cuisines from the best kitchens throughout the city.',\r\n                username: 'Robert Smith',\r\n                rating: 4.3,\r\n            },\r\n            {\r\n                photoURL: Image,\r\n                review:\r\n                    'Fooddude provides you the best food ranging from several cuisines from the best kitchens throughout the city.Fooddude provides you the best food ranging from several cuisines from the best kitchens throughout the city.',\r\n                username: 'Robert Smith',\r\n                rating: 4.3,\r\n            },\r\n            {\r\n                photoURL: Image,\r\n                review:\r\n                    'Fooddude provides you the best food ranging from several cuisines from the best kitchens throughout the city.Fooddude provides you the best food ranging from several cuisines from the best kitchens throughout the city.',\r\n                username: 'Robert Smith',\r\n                rating: 4.3,\r\n            },\r\n            {\r\n                photoURL: Image,\r\n                review:\r\n                    'Fooddude provides you the best food ranging from several cuisines from the best kitchens throughout the city.Fooddude provides you the best food ranging from several cuisines from the best kitchens throughout the city.',\r\n                username: 'Robert Smith',\r\n                rating: 4.3,\r\n            },\r\n            {\r\n                photoURL: Image,\r\n                review:\r\n                    'Fooddude provides you the best food ranging from several cuisines from the best kitchens throughout the city.Fooddude provides you the best food ranging from several cuisines from the best kitchens throughout the city.',\r\n                username: 'Robert Smith',\r\n                rating: 4.3,\r\n            },\r\n        ]);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <TopSearch />\r\n            <div className=\"food-background\">\r\n                <section className=\"section pt-5 pb-5 homepage-add-section \">\r\n                    <SectionHeading heading=\"Our Motto\" subHeading=\"\" />\r\n                    <div className=\"container\">\r\n                        <div className=\"row row_motto\">\r\n                            <div className=\"col col_motto\">\r\n                                <blockquote\r\n                                    class=\"blockquote blockquote-custom  p-5 shadow rounded card_moto\"\r\n                                    style={{\r\n                                        height: '280px',\r\n                                        background: '#f0f0f0',\r\n                                    }}\r\n                                >\r\n                                    <div class=\"blockquote-custom-icon bg-info shadow-sm\">\r\n                                        <i class=\"fa fa-quote-left text-white\"></i>\r\n                                    </div>\r\n                                    <h4 className=\"mb-2 font-weight-normal\">\r\n                                        <span className=\"font-weight-bold\">Affordability</span>\r\n                                    </h4>\r\n                                    <p class=\"mb-0 mt-2 font-italic\">\r\n                                        \"The tastiest food doesn't have to be the costliest. In these tough times, it\r\n                                        may be very hard for us to spend every time we crave something delicious.\r\n                                        Fooddude promises to be the most affordable option you have to satisfy your\r\n                                        hunger.\"\r\n                                    </p>\r\n                                </blockquote>\r\n                            </div>\r\n                            <div className=\"col col_motto\">\r\n                                <blockquote\r\n                                    class=\"blockquote blockquote-custom  p-5 shadow rounded card_moto\"\r\n                                    style={{\r\n                                        height: '280px',\r\n                                        background: '#f0f0f0',\r\n                                    }}\r\n                                >\r\n                                    <div class=\"blockquote-custom-icon bg-info shadow-sm\">\r\n                                        <i class=\"fa fa-quote-left text-white\"></i>\r\n                                    </div>\r\n                                    <h4 className=\"mb-2 font-weight-normal\">\r\n                                        <span className=\"font-weight-bold\">Quality</span>\r\n                                    </h4>\r\n                                    <p class=\"mb-0 mt-2 font-italic\">\r\n                                        \"Fooddude provides you the best food ranging from several cuisines from the best\r\n                                        kitchens throughout the city. We assure you of satisfying your palette minus the\r\n                                        food colours and unnecessary oil.\"\r\n                                    </p>\r\n                                </blockquote>\r\n                            </div>\r\n                            <div className=\"col col_motto\">\r\n                                <blockquote\r\n                                    class=\"blockquote blockquote-custom  p-5 shadow rounded card_moto\"\r\n                                    style={{\r\n                                        height: '280px',\r\n                                        background: '#f0f0f0',\r\n                                    }}\r\n                                >\r\n                                    <div class=\"blockquote-custom-icon bg-info shadow-sm\">\r\n                                        <i class=\"fa fa-quote-left text-white\"></i>\r\n                                    </div>\r\n                                    <h4 className=\"mb-2 font-weight-normal\">\r\n                                        <span className=\"font-weight-bold\">Hygiene</span>\r\n                                    </h4>\r\n                                    <p class=\"mb-0 mt-2 font-italic\">\r\n                                        \"The pandemic has forced us to rethink our sanitary practices. But, Fooddude\r\n                                        promises that you'll never have to think twice while ordering from us. Our\r\n                                        delivery agents are checked and sanitized regularly and use masks and gloves\r\n                                        throughout the process to ensure your food reaches to you safely.\"\r\n                                    </p>\r\n                                </blockquote>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"section pt-5 pb-5 products-section\">\r\n                    <Container>\r\n                        <SectionHeading\r\n                            heading=\"Our Happy Customers!\"\r\n                            subHeading=\"All of the smiles in our heart....\"\r\n                        />\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                <OwlCarousel nav {...options} className=\"owl-carousel-four owl-theme\">\r\n                                    {reviews.map((ele, i) => (\r\n                                        <ReviewCard {...ele} key={i} />\r\n                                    ))}\r\n                                </OwlCarousel>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </section>\r\n                <section\r\n                    className=\"section pt-5 pb-5  becomemember-section border-bottom \"\r\n                    style={{ marginTop: '-70px' }}\r\n                >\r\n                    <Container>\r\n                        <SectionHeading heading=\"Join The Family\" subHeading=\"\" />\r\n                        <Row>\r\n                            <Col sm={12} className=\"text-center\">\r\n                                <Link to=\"/detail\" className=\"btn btn-success btn-lg\">\r\n                                    Check Menu <FontAwesome icon=\"chevron-circle-right\" />\r\n                                </Link>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst options = {\r\n    responsive: {\r\n        0: {\r\n            items: 1,\r\n        },\r\n        600: {\r\n            items: 2,\r\n        },\r\n        1000: {\r\n            items: 3,\r\n        },\r\n        1200: {\r\n            items: 3,\r\n        },\r\n    },\r\n\r\n    lazyLoad: true,\r\n    pagination: false.toString(),\r\n    loop: false,\r\n    rewind: true,\r\n    dots: false,\r\n    autoplay: true,\r\n    autoPlay: 1000,\r\n    nav: true,\r\n    autoplayHoverPause: true,\r\n    navText: [\"<i class='fa fa-chevron-left'></i>\", \"<i class='fa fa-chevron-right'></i>\"],\r\n};\r\n\r\nexport default Index;\r\n","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Offers.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\List.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\NotFound.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Thanks.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Extra.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Login.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Register.js",["299"],"import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Row, Col, Container, Form, Button, Alert } from 'react-bootstrap';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport FontAwesome from './common/FontAwesome';\r\nimport { auth, googleProvider } from '../firebase';\r\nimport axios from 'axios';\r\nimport Input from './Input/Index';\r\n\r\nfunction Register(props) {\r\n    const [name, setname] = useState('');\r\n    const [phone, setphone] = useState('');\r\n    const [email, setemail] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [passwordConfirm, setpasswordConfirm] = useState('');\r\n    const { signup, currentUser, setCurrentUser } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const submitButtonDisable = (() => {\r\n        if (name.length === 0 || password.length <= 8 || passwordConfirm !== password) {\r\n            return true;\r\n        }\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (re.test(String(email).toLowerCase()) === false) {\r\n            return true;\r\n        }\r\n        const telre = /\\+?\\d[\\d -]{8,12}\\d/;\r\n        if (telre.test(String(phone).toLowerCase()) === false) {\r\n            return true;\r\n        }\r\n        return false;\r\n    })();\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        //const UserDetails={ }\r\n        if (password !== passwordConfirm) {\r\n            return setError('Passwords do not match');\r\n        }\r\n\r\n        try {\r\n            setError('');\r\n            setLoading(true);\r\n            const result = await signup(email, password);\r\n            const token = await result.user.getIdToken();\r\n            const res = await fetch(`http://localhost:3030/api/users/new`, {\r\n                method: 'post',\r\n                headers: { 'Content-Type': 'application/json', Authorization: token },\r\n                body: JSON.stringify({\r\n                    name: name,\r\n                    phone: phone,\r\n                    email: result.user.email,\r\n                    uid: result.user.uid,\r\n                }),\r\n            });\r\n            if (res) {\r\n                history.push('/myaccount');\r\n                const userData = {\r\n                    name: name,\r\n                    phone: phone,\r\n                    email: result.user.email,\r\n                    uid: result.user.uid,\r\n                    token: token,\r\n                };\r\n                localStorage.setItem('userData', JSON.stringify(userData));\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            setError('Failed to create an account');\r\n        }\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    const signInWithGoogle = () => {\r\n        auth.signInWithPopup(googleProvider)\r\n            .then((res) => {\r\n                setCurrentUser(res.user);\r\n                res.user.getIdToken().then((token) => {\r\n                    axios\r\n                        .post(\r\n                            `http://localhost:3030/api/users/new`,\r\n                            {\r\n                                name: res.user.displayName,\r\n                                phone: res.user.phoneNumber,\r\n                                email: res.user.email,\r\n                                uid: res.user.uid,\r\n                            },\r\n                            {\r\n                                headers: { Authorization: token },\r\n                            }\r\n                        )\r\n                        .catch((err) => console.log(err));\r\n                    const userData = {\r\n                        name: res.user.displayName,\r\n                        phone: res.user.phoneNumber,\r\n                        email: res.user.email,\r\n                        uid: res.user.uid,\r\n                        token: token,\r\n                    };\r\n                    localStorage.setItem('userData', JSON.stringify(userData));\r\n                });\r\n                history.push('/');\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Container fluid className=\"food-background\">\r\n            <Row>\r\n                <Col md={4} lg={6} className=\"d-none d-md-flex bg-image hidecol\">\r\n                    <div>\r\n                        <img\r\n                            src=\"https://images.unsplash.com/photo-1502301103665-0b95cc738daf?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=700&q=80\"\r\n                            height=\"800px\"\r\n                            width=\"700px\"\r\n                            alt=\"home\"\r\n                        />\r\n                    </div>\r\n                </Col>\r\n                <Col md={8} lg={6} className=\"resize\">\r\n                    <div\r\n                        className=\"login d-flex align-items-center pb-5alt\r\npy-5alt py-5\"\r\n                    >\r\n                        <Container>\r\n                            <Row>\r\n                                <Col\r\n                                    md={9}\r\n                                    lg={8}\r\n                                    className=\"loginbox mx-auto pb-5alt\r\npy-5alt pl-5 pr-5\"\r\n                                >\r\n                                    <h3 className=\"login-heading mb-4\">\r\n                                        <img className=\"mr-3\" src=\"/img/logo-fd-round.png\" alt=\"logo\"></img>New Buddy!\r\n                                    </h3>\r\n                                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                                    <Form onSubmit={handleSubmit}>\r\n                                        <Input\r\n                                            filled={name !== ''}\r\n                                            name=\"name\"\r\n                                            Label=\"Name\"\r\n                                            type=\"text\"\r\n                                            value={name}\r\n                                            change={(e) => {\r\n                                                setname(e.target.value);\r\n                                            }}\r\n                                        />\r\n                                        <Input\r\n                                            filled={phone !== ''}\r\n                                            name=\"phone\"\r\n                                            Label=\"Phone\"\r\n                                            type=\"tel\"\r\n                                            value={phone}\r\n                                            change={(e) => {\r\n                                                setphone(e.target.value);\r\n                                            }}\r\n                                        />\r\n                                        <Input\r\n                                            filled={email !== ''}\r\n                                            type=\"email\"\r\n                                            Label=\"Email\"\r\n                                            name=\"email\"\r\n                                            value={email}\r\n                                            change={(e) => {\r\n                                                setemail(e.target.value);\r\n                                            }}\r\n                                        />\r\n                                        <Input\r\n                                            filled={password !== ''}\r\n                                            type=\"password\"\r\n                                            Label=\"Password (Minimum 9 Characters)\"\r\n                                            name=\"password\"\r\n                                            value={password}\r\n                                            change={(e) => {\r\n                                                setpassword(e.target.value);\r\n                                            }}\r\n                                        />\r\n                                        <Input\r\n                                            filled={passwordConfirm !== ''}\r\n                                            type=\"password\"\r\n                                            Label=\"Confirm Password\"\r\n                                            name=\"passwordConfirm\"\r\n                                            value={passwordConfirm}\r\n                                            change={(e) => {\r\n                                                setpasswordConfirm(e.target.value);\r\n                                            }}\r\n                                        />\r\n                                        <Button\r\n                                            type=\"submit\"\r\n                                            disabled={loading || submitButtonDisable}\r\n                                            className=\"btn btn-lg btn-outline-primary btn-block btn-login text-uppercase font-weight-bold mb-2\"\r\n                                        >\r\n                                            Sign Up\r\n                                        </Button>\r\n                                        <div className=\"text-center pt-3\">\r\n                                            Already have an account?{' '}\r\n                                            <Link className=\"font-weight-bold\" to=\"/login\">\r\n                                                Sign In\r\n                                            </Link>\r\n                                        </div>\r\n                                        <hr className=\"my-4\" />\r\n                                        <p className=\"text-center\">SIGN UP WITH</p>\r\n                                        <div className=\"row w100 padzero\">\r\n                                            <div className=\"col padzero pr-2 \">\r\n                                                <Button\r\n                                                    className=\" btn pl-1 pr-1 btn-lg btn-google font-weight-normal text-white btn-block text-uppercase\"\r\n                                                    onClick={signInWithGoogle}\r\n                                                >\r\n                                                    <FontAwesome icon=\"google\" className=\"mr-2\" /> Google\r\n                                                </Button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\MyAccount.js",["300"],"import React from 'react';\r\nimport {Switch,Route} from 'react-router-dom';\r\nimport {NavLink,Link } from 'react-router-dom';\r\nimport {Row,Col,Container,Image} from 'react-bootstrap';\r\nimport Offers from './myaccount/Offers';\r\nimport Orders from './myaccount/Orders';\r\nimport Favourites from './myaccount/Favourites';\r\nimport Payments from './myaccount/Payments';\r\nimport Addresses from './myaccount/Addresses';\r\nimport EditProfileModal from './modals/EditProfileModal';\r\n\r\nfunction MyAccount(props) {\r\n const [editProfile,showEditProfile]=React.useState(false)\r\n const userData=JSON.parse(localStorage.getItem('userData'))\r\n\r\n const hideEditProfile = () => showEditProfile(false);\r\n\r\n\t\r\n    \treturn (\r\n    \t\t<>\r\n        <EditProfileModal show={editProfile} onHide={hideEditProfile}/>\r\n        <section className=\"section pt-4 pb-4 osahan-account-page food-background\">\r\n           <Container>\r\n              <Row>\r\n                 <Col md={3}>\r\n                    <div className=\"osahan-account-page-left shadow-sm bg-white h-100\">\r\n                       <div className=\"border-bottom p-4\">\r\n                          <div className=\"osahan-user text-center\">\r\n                             <div className=\"osahan-user-media\">\r\n                               <h5><u>Your Details</u></h5>\r\n                               {userData? <div className=\"osahan-user-media-body\" style={{marginTop:'30px'}}>\r\n                                   <h6 className=\"mb-2\">{userData.name?userData.name:null}</h6>\r\n                                   <p className=\"mb-1\">{userData.phone?userData.phone:null}</p>\r\n                                   <p>{userData.email?userData.email:null}</p>\r\n                                   <p className=\"mb-0 text-black font-weight-bold\"><Link to='#' onClick={() => showEditProfile(true)} className=\"text-primary mr-3\"><i className=\"icofont-ui-edit\"></i> EDIT</Link></p>\r\n                                </div>:null}\r\n                             </div>\r\n                          </div>\r\n                       </div>\r\n                       <ul className=\"nav flex-column border-0 pt-4 pl-4 pb-4\">\r\n                          <li className=\"nav-item\">\r\n                             <NavLink className=\"nav-link\" activeClassName=\"active\" exact to=\"/myaccount/orders\"><i className=\"icofont-food-cart\"></i> Orders</NavLink>\r\n                          </li>\r\n                          <li className=\"nav-item\">\r\n                             <NavLink className=\"nav-link\" activeClassName=\"active\" exact to=\"/myaccount/offers\"><i className=\"icofont-sale-discount\"></i> Offers</NavLink>\r\n                          </li>\r\n                          {/* <li className=\"nav-item\">\r\n                             <NavLink className=\"nav-link\" activeClassName=\"active\" exact to=\"/myaccount/favourites\"><i className=\"icofont-heart\"></i> Favourites</NavLink>\r\n                          </li>\r\n                          <li className=\"nav-item\">\r\n                             <NavLink className=\"nav-link\" activeClassName=\"active\" exact to=\"/myaccount/payments\"><i className=\"icofont-credit-card\"></i> Payments</NavLink>\r\n                          </li> */}\r\n                          <li className=\"nav-item\">\r\n                             <NavLink className=\"nav-link\" activeClassName=\"active\" exact to=\"/myaccount/addresses\"><i className=\"icofont-location-pin\"></i> Addresses</NavLink>\r\n                          </li>\r\n                       </ul>\r\n                    </div>\r\n                 </Col>\r\n                 <Col md={9}>\r\n                  <Switch>\r\n                    <Route path=\"/myaccount/orders\" exact component={Orders} />\r\n                    <Route path=\"/myaccount/offers\" exact component={Offers} />\r\n                    <Route path=\"/myaccount/favourites\" exact component={Favourites} />\r\n                    <Route path=\"/myaccount/payments\" exact component={Payments} />\r\n                    <Route path=\"/myaccount/addresses\" exact component={Addresses} />\r\n                  </Switch>\r\n                 </Col>\r\n              </Row>\r\n           </Container>\r\n        </section>\r\n    \t\t</>\r\n    \t);\r\n    }\r\n\r\n\r\n\r\nexport default MyAccount;","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\TrackOrder.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Invoice.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Checkout.js",["301","302","303","304","305","306","307","308","309","310","311","312","313","314"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Container,\r\n    Form,\r\n    InputGroup,\r\n    Button,\r\n    Tab,\r\n    Nav,\r\n    ButtonToolbar,\r\n    ToggleButton,\r\n    ToggleButtonGroup,\r\n    Image,\r\n    OverlayTrigger,\r\n    Tooltip,\r\n} from 'react-bootstrap';\r\nimport ItemsCarousel from './common/ItemsCarousel';\r\nimport ChooseAddressCard from './common/ChooseAddressCard';\r\nimport CheckoutItem from './common/CheckoutItem';\r\nimport AddAddressModal from './modals/AddAddressModal';\r\nimport Icofont from 'react-icofont';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { BaseUrl, BaseUrl2 } from '../BaseUrl';\r\nimport Header from './common/Header';\r\nimport Footer from './common/Footer';\r\nfunction loadScript(src) {\r\n    return new Promise((resolve) => {\r\n        const script = document.createElement('script');\r\n        script.src = src;\r\n        script.onload = () => {\r\n            resolve(true);\r\n        };\r\n        script.onerror = () => {\r\n            resolve(false);\r\n        };\r\n        document.body.appendChild(script);\r\n    });\r\n}\r\n\r\nfunction Checkout(props) {\r\n    const history = useHistory();\r\n    const [addressModal, showAddressModal] = React.useState(false);\r\n\r\n    const promocodeRef = React.useRef();\r\n    const [promocodeMssg, setPromocodeMssg] = React.useState('');\r\n    const [AddressData, setAddressData] = React.useState([]);\r\n    const [recievedData, setRecievedData] = React.useState(false);\r\n    const { uid, token, name, email, phone } = JSON.parse(localStorage.getItem('userData'));\r\n    const [addressId, setAddressId] = React.useState('');\r\n    const [updated, isUpdated] = React.useState();\r\n    const [orderData, setOrderData] = React.useState({});\r\n    const { cartUpdated, updateCart } = useAuth();\r\n    const [cartData, setCartData] = React.useState([]);\r\n    const [totalPrice, setTotalPrice] = React.useState(0);\r\n    const [recievedData2, setRecievedData2] = React.useState(false);\r\n    const [cartItem, setCartItem] = React.useState();\r\n    const [checkingPromocode, setCheckingPromocode] = React.useState(false);\r\n\r\n    //RAZORPAY CALL\r\n    async function displayRazorpay() {\r\n        const res = await loadScript('https://checkout.razorpay.com/v1/checkout.js');\r\n\r\n        if (!res) {\r\n            alert('Razorpay SDK failed to load. Are you online?');\r\n            return;\r\n        }\r\n\r\n        const data = await fetch(`${BaseUrl2}/api/payment/razorpay`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json', Authorization: token },\r\n            body: JSON.stringify({\r\n                uid: uid,\r\n                price: totalPrice,\r\n            }),\r\n        }).then((t) => t.json());\r\n\r\n        console.log(data);\r\n\r\n        const options = {\r\n            key: process.env.REACT_APP_RAZORPAY_API_KEY,\r\n            currency: data.currency,\r\n            amount: data.amount.toString(),\r\n            order_id: data.id,\r\n            name: 'Food Order',\r\n            description: 'Thank you for nothing. Please give us some money',\r\n            image: '/img/logo-fd-round.png',\r\n            handler: function (response) {\r\n                const newdate = new Date();\r\n                axios\r\n                    .post(\r\n                        `${BaseUrl}/api/order/add`,\r\n                        {\r\n                            userId: uid,\r\n                            Address: orderData.addressData,\r\n                            items: orderData.cartData,\r\n                            billing: {\r\n                                promoCode: '',\r\n                                finalAmount: totalPrice,\r\n                                discount: '',\r\n                                deliveryCharge: '',\r\n                            },\r\n                            paymentId: response.razorpay_payment_id,\r\n                            id: response.razorpay_order_id,\r\n                            RazorpaySignature: response.razorpay_signature,\r\n                            paymentMethod: 'ONLINE',\r\n                            orderTime: {\r\n                                timestamp: newdate.getTime(),\r\n                            },\r\n                        },\r\n                        {\r\n                            headers: { Authorization: token },\r\n                        }\r\n                    )\r\n                    .then((t) => {\r\n                        if (t) {\r\n                            history.push('/thanks');\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err.response);\r\n                    });\r\n                axios\r\n                    .post(\r\n                        `${BaseUrl2}api/users/cart/delete`,\r\n                        {\r\n                            uid: uid,\r\n                        },\r\n                        {\r\n                            headers: { Authorization: token },\r\n                        }\r\n                    )\r\n                    .catch((err) => {\r\n                        console.log(err.response);\r\n                    });\r\n                axios\r\n                    .post(\r\n                        `${BaseUrl2}/api/users/add-order-id`,\r\n                        {\r\n                            uid: uid,\r\n                            orderId: response.razorpay_order_id,\r\n                        },\r\n                        {\r\n                            headers: { Authorization: token },\r\n                        }\r\n                    )\r\n                    .catch((err) => {\r\n                        console.log(err.response);\r\n                    });\r\n                // console.log(response)\r\n                // alert(response.razorpay_payment_id)\r\n                // alert(response.razorpay_order_id)\r\n                // alert(response.razorpay_signature)\r\n            },\r\n            prefill: {\r\n                name: name,\r\n                email: email,\r\n                phone_number: phone,\r\n            },\r\n        };\r\n        const paymentObject = new window.Razorpay(options);\r\n        paymentObject.open();\r\n    }\r\n\r\n    //ADDRESS CALL\r\n\r\n    React.useEffect(() => {\r\n        try {\r\n            const fetchData = async () => {\r\n                const result = await axios.post(\r\n                    `${BaseUrl2}/api/users/address/get-all`,\r\n                    {\r\n                        uid: uid,\r\n                    },\r\n                    {\r\n                        headers: { Authorization: token },\r\n                    }\r\n                );\r\n\r\n                if (result.data) {\r\n                    setAddressData(result.data);\r\n                    setRecievedData(true);\r\n                } else {\r\n                    console.log('error');\r\n                }\r\n            };\r\n            fetchData();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }, [updated, token, uid]);\r\n\r\n    //CART CALL\r\n    React.useEffect(() => {\r\n        try {\r\n            if (uid) {\r\n                setTotalPrice(0);\r\n                const fetchData = async () => {\r\n                    const result = await axios.post(\r\n                        `${BaseUrl2}/api/users/cart/get`,\r\n                        {\r\n                            uid: uid,\r\n                        },\r\n                        {\r\n                            headers: { Authorization: token },\r\n                        }\r\n                    );\r\n\r\n                    if (result.data) {\r\n                        let tprice = 0;\r\n                        setCartData(result.data);\r\n                        for (let item of result.data) {\r\n                            tprice += parseInt(item.quantity) * parseInt(item.price);\r\n                            setTotalPrice(tprice);\r\n                        }\r\n\r\n                        setOrderData((order) => ({\r\n                            ...order,\r\n                            cartData: result.data,\r\n                        }));\r\n                        setRecievedData2(true);\r\n                    } else {\r\n                        console.log('error');\r\n                    }\r\n                };\r\n\r\n                fetchData();\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }, [cartUpdated, token, uid]);\r\n\r\n    //UPDATING CART\r\n    React.useEffect(() => {\r\n        if (recievedData2) {\r\n            setCartItem(\r\n                cartData.map((item) => {\r\n                    return (\r\n                        <CheckoutItem\r\n                            itemName={`${item.name}`}\r\n                            price={parseInt(item.price)}\r\n                            priceUnit=\"₹\"\r\n                            id={item.name}\r\n                            qty={item.quantity}\r\n                            show={true}\r\n                            getValue={getQty}\r\n                        />\r\n                    );\r\n                })\r\n            );\r\n            setRecievedData2(false);\r\n        }\r\n    }, [recievedData2]);\r\n\r\n    const getQty = async ({ id, quantity, price }) => {\r\n        const item = {\r\n            name: id,\r\n            quantity: quantity,\r\n            price: price,\r\n        };\r\n\r\n        const result = await axios.post(\r\n            `${BaseUrl2}/api/users/cart/add`,\r\n            {\r\n                item: item,\r\n                uid: uid,\r\n            },\r\n            {\r\n                headers: {\r\n                    Authorization: token,\r\n                },\r\n            }\r\n        );\r\n        if (result) {\r\n            updateCart();\r\n        }\r\n    };\r\n\r\n    //CHECK PROMOCODE\r\n\r\n    React.useEffect(() => {\r\n        if (checkingPromocode) {\r\n            setPromocodeMssg('');\r\n\r\n            //   console.log(uid)\r\n            const promocodeString = promocodeRef.current.value;\r\n            const fetchData = async () => {\r\n                try {\r\n                    const result = await axios.post(\r\n                        `${BaseUrl2}/api/promocode/check-promocode`,\r\n                        {\r\n                            uid: uid,\r\n                            promocode: promocodeString.toUpperCase(),\r\n                        },\r\n                        {\r\n                            headers: {\r\n                                Authorization: token,\r\n                            },\r\n                        }\r\n                    );\r\n\r\n                    setPromocodeMssg(result.data);\r\n                } catch (err) {\r\n                    console.log(err.response.data);\r\n                }\r\n            };\r\n            fetchData();\r\n            setCheckingPromocode(false);\r\n        }\r\n    });\r\n\r\n    const hideAddressModal = () => showAddressModal(false);\r\n\r\n    return (\r\n        <section className=\"offer-dedicated-body  pt-2 pb-2 food-background\">\r\n            {/* <Header/> */}\r\n            <AddAddressModal show={addressModal} onHide={hideAddressModal} isUpdated={isUpdated} />\r\n            <Container>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <div className=\"offer-dedicated-body-left\">\r\n                            {/* <div className=\"bg-white rounded shadow-sm p-4 mb-4\">\r\n\t                        <h6 className=\"mb-3\">You may also like</h6>\r\n\t                        <ItemsCarousel />\r\n\t                     </div> */}\r\n                            <div className=\"pt-2\"></div>\r\n                            <div className=\"bg-white rounded shadow-md p-4 mb-4 food-background\">\r\n                                <h3 className=\"mb-1\">Choose a delivery address</h3>\r\n                                <div className=\"pt-3\"></div>\r\n                                <Form>\r\n                                    <Row>\r\n                                        {AddressData.map((item, index) => {\r\n                                            return (\r\n                                                <Col md={6}>\r\n                                                    <Form.Check\r\n                                                        inline\r\n                                                        type=\"radio\"\r\n                                                        name=\"address-radio\"\r\n                                                        id={`${item.housenumber},${item.pincode}`}\r\n                                                        onClick={() => {\r\n                                                            setOrderData((prevState) => ({\r\n                                                                ...prevState,\r\n                                                                addressData: item,\r\n                                                            }));\r\n                                                        }}\r\n                                                        label={\r\n                                                            <ChooseAddressCard\r\n                                                                boxclassName={`border border-success bg-green`}\r\n                                                                title=\"Address\"\r\n                                                                icoIcon=\"home\"\r\n                                                                iconclassName=\"icofont-3x\"\r\n                                                                address={`${item.housenumber}, ${item.line1}, ${item.line2}, ${item.city},${item.state} ${item.pincode} India`}\r\n                                                            />\r\n                                                        }\r\n                                                    ></Form.Check>\r\n                                                </Col>\r\n                                            );\r\n                                        })}\r\n                                        {/* <Col md={6}>\r\n\t\t\t\t               \t  <ChooseAddressCard \r\n\t\t\t\t\t\t\t\t\t  title= 'Work'\r\n\t\t\t\t\t\t\t\t\t  icoIcon= 'briefcase'\r\n\t\t\t\t\t\t\t\t\t  iconclassName= 'icofont-3x'\r\n\t\t\t\t\t\t\t\t\t  address= 'NCC, Model Town Rd, Pritm Nagar, Model Town, Ludhiana, Punjab 141002, India'\r\n\t\t\t\t               \t  />\r\n\t                           </Col>\r\n\t                           <Col md={6}>\r\n\t\t\t\t               \t  <ChooseAddressCard \r\n\t\t\t\t\t\t\t\t\t  title= 'Work'\r\n\t\t\t\t\t\t\t\t\t  icoIcon= 'briefcase'\r\n\t\t\t\t\t\t\t\t\t  iconclassName= 'icofont-3x'\r\n\t\t\t\t\t\t\t\t\t  address= 'NCC, Model Town Rd, Pritm Nagar, Model Town, Ludhiana, Punjab 141002, India'\r\n\t\t\t\t               \t     \r\n\t\t\t\t\t\t\t\t\t />\r\n\t                           </Col>\r\n\t                           <Col md={6}>\r\n\t\t\t\t               \t  <ChooseAddressCard \r\n\t\t\t\t\t\t\t\t\t  title= 'Work'\r\n\t\t\t\t\t\t\t\t\t  icoIcon= 'briefcase'\r\n\t\t\t\t\t\t\t\t\t  iconclassName= 'icofont-3x'\r\n\t\t\t\t\t\t\t\t\t  type=\"newAddress\"\r\n\t\t\t\t\t\t\t\t\t  address= 'NCC, Model Town Rd, Pritm Nagar, Model Town, Ludhiana, Punjab 141002, India'\r\n\t\t\t\t\t\t\t\t\t  onAddNewClick={() => showAddressModal(true)}\r\n\t\t\t\t               \t  />\r\n\t                           </Col> */}\r\n                                        <Col md={12}>\r\n                                            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                <Button\r\n                                                    type=\"button\"\r\n                                                    onClick={() => {\r\n                                                        showAddressModal(true);\r\n                                                    }}\r\n                                                    variant=\"primary\"\r\n                                                    className=\"d-flex w-50 text-center justify-content-center\"\r\n                                                >\r\n                                                    Add Address\r\n                                                </Button>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Form>\r\n                            </div>\r\n                            <div className=\"pt-2\"></div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <div className=\"generator-bg rounded shadow-sm mb-4 p-4 osahan-cart-item\">\r\n                            <div className=\"d-flex mb-4 osahan-cart-item-profile\">\r\n                                <Image fluid className=\"mr-3 rounded-pill\" alt=\"osahan\" src=\"/img/logo-fd-round.png\" />\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <h6 className=\"mb-1 text-white\">Food Dude - Your Order</h6>\r\n                                    {/* <p className=\"mb-0 text-white\"><Icofont icon=\"location-pin\" /> 2036 2ND AVE, NEW YORK, NY 10029</p> */}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"bg-white rounded shadow-sm mb-2\">\r\n                                {/* <CheckoutItem \r\n                     \t\titemName=\"Chicken Tikka Sub\"\r\n\t\t\t\t\t\t\tprice={314}\r\n\t\t\t\t\t\t\tpriceUnit=\"$\"\r\n\t\t\t\t\t\t\tid={1}\r\n\t\t\t\t\t\t\tqty={2}\r\n\t\t\t\t\t\t\tshow={true}\r\n\t\t\t\t\t\t\tminValue={0}\r\n\t\t\t\t\t\t\tmaxValue={7}\r\n\t\t\t\t\t\t\tgetValue={getQty}\r\n                     \t />\r\n                     \t<CheckoutItem \r\n                     \t\titemName=\"Cheese corn Roll\"\r\n\t\t\t\t\t\t\tprice={260}\r\n\t\t\t\t\t\t\tpriceUnit=\"$\"\r\n\t\t\t\t\t\t\tid={1}\r\n\t\t\t\t\t\t\tqty={1}\r\n\t\t\t\t\t\t\tshow={true}\r\n\t\t\t\t\t\t\tminValue={0}\r\n\t\t\t\t\t\t\tmaxValue={7}\r\n\t\t\t\t\t\t\tgetValue={getQty}\r\n                     \t />\r\n                     \t<CheckoutItem \r\n                     \t\titemName=\"Mixed Veg\"\r\n\t\t\t\t\t\t\tprice={122}\r\n\t\t\t\t\t\t\tpriceUnit=\"$\"\r\n\t\t\t\t\t\t\tid={1}\r\n\t\t\t\t\t\t\tqty={1}\r\n\t\t\t\t\t\t\tshow={true}\r\n\t\t\t\t\t\t\tminValue={0}\r\n\t\t\t\t\t\t\tmaxValue={7}\r\n\t\t\t\t\t\t\tgetValue={getQty}\r\n                     \t />\r\n                     \t<CheckoutItem \r\n                     \t\titemName=\"Black Dal Makhani\"\r\n\t\t\t\t\t\t\tprice={652}\r\n\t\t\t\t\t\t\tpriceUnit=\"$\"\r\n\t\t\t\t\t\t\tid={1}\r\n\t\t\t\t\t\t\tqty={1}\r\n\t\t\t\t\t\t\tshow={true}\r\n\t\t\t\t\t\t\tminValue={0}\r\n\t\t\t\t\t\t\tmaxValue={7}\r\n\t\t\t\t\t\t\tgetValue={getQty}\r\n                     \t />\r\n                     \t<CheckoutItem \r\n                     \t\titemName=\"Mixed Veg\"\r\n\t\t\t\t\t\t\tprice={122}\r\n\t\t\t\t\t\t\tpriceUnit=\"$\"\r\n\t\t\t\t\t\t\tid={1}\r\n\t\t\t\t\t\t\tqty={1}\r\n\t\t\t\t\t\t\tshow={true}\r\n\t\t\t\t\t\t\tminValue={0}\r\n\t\t\t\t\t\t\tmaxValue={7}\r\n\t\t\t\t\t\t\tgetValue={getQty}\r\n                     \t /> */}\r\n                                {cartItem}\r\n                            </div>\r\n                            <div className=\"mb-2 bg-white rounded p-2 clearfix\">\r\n                                <InputGroup className=\"input-group-sm mb-2\">\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter promo code\"\r\n                                        ref={promocodeRef}\r\n                                        style={{ textTransform: 'uppercase' }}\r\n                                    />\r\n                                    <InputGroup.Append>\r\n                                        <Button\r\n                                            variant=\"primary\"\r\n                                            type=\"button\"\r\n                                            onClick={() => {\r\n                                                setCheckingPromocode(true);\r\n                                            }}\r\n                                            id=\"button-addon2\"\r\n                                        >\r\n                                            <Icofont icon=\"sale-discount\" /> APPLY\r\n                                        </Button>\r\n                                    </InputGroup.Append>\r\n                                </InputGroup>\r\n                                <p style={{ color: 'green', fontWeight: '500' }}>{promocodeMssg.message}</p>\r\n                                {/* <InputGroup className=\"mb-0\">\r\n                           <InputGroup.Prepend>\r\n                              <InputGroup.Text><Icofont icon=\"comment\" /></InputGroup.Text>\r\n                           </InputGroup.Prepend>\r\n                           <Form.Control as=\"textarea\" placeholder=\"Any suggestions? We will pass it on...\" aria-label=\"With textarea\" />\r\n                        </InputGroup> */}\r\n                            </div>\r\n                            <div className=\"mb-2 bg-white rounded p-2 clearfix\">\r\n                                <p className=\"mb-1\">\r\n                                    Item Total <span className=\"float-right text-dark\">₹{totalPrice}</span>\r\n                                </p>\r\n                                <p className=\"mb-1\">\r\n                                    Restaurant Charges <span className=\"float-right text-dark\">$62.8</span>\r\n                                </p>\r\n                                <p className=\"mb-1\">\r\n                                    Delivery Fee\r\n                                    <OverlayTrigger\r\n                                        key=\"top\"\r\n                                        placement=\"top\"\r\n                                        overlay={<Tooltip id=\"tooltip-top\">Total discount breakup</Tooltip>}\r\n                                    >\r\n                                        <span className=\"text-info ml-1\">\r\n                                            <Icofont icon=\"info-circle\" />\r\n                                        </span>\r\n                                    </OverlayTrigger>\r\n                                    <span className=\"float-right text-dark\">₹49</span>\r\n                                </p>\r\n                                {/* <p className=\"mb-1 text-success\">Total Discount \r\n                           <span className=\"float-right text-success\">$1884</span>\r\n                        </p> */}\r\n                                <hr />\r\n                                <h6 className=\"font-weight-bold mb-0\">\r\n                                    TO PAY <span className=\"float-right\">₹{totalPrice + 49}</span>\r\n                                </h6>\r\n                            </div>\r\n                            <Button\r\n                                variant=\"success\"\r\n                                onClick={() => {\r\n                                    displayRazorpay();\r\n                                }}\r\n                                className=\"btn btn-block btn-lg\"\r\n                            >\r\n                                PAY ₹{totalPrice + 49}\r\n                                <Icofont icon=\"long-arrow-right\" />\r\n                            </Button>\r\n                        </div>\r\n                        {/* <div className=\"pt-2\"></div>\r\n\t                  <div className=\"alert alert-success\" role=\"alert\">\r\n\t                     You have saved <strong>$1,884</strong> on the bill\r\n\t                  </div>\r\n\t   \t\t\t\t  <div className=\"pt-2\"></div> */}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            {/* <Footer /> */}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Checkout;\r\n","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Detail.js",["315"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n// import { useHistory } from 'react-router-dom';\r\nimport { Row, Col, Container, Tab } from 'react-bootstrap';\r\n\r\nimport QuickBite from './common/QuickBite';\r\nimport Cart from './Order/Cart';\r\nimport Spinner from './Spinner/index';\r\nimport { BaseUrl, BaseUrl2 } from '../BaseUrl';\r\n// import { useAuth } from '../contexts/AuthContext';\r\nimport { useOrder } from '../contexts/OrderContext';\r\n\r\nfunction Detail(props) {\r\n    // const history = useHistory();\r\n    const [menu, setMenu] = React.useState([]);\r\n    // const { updateCart } = useAuth();\r\n    const { cartItems, setCart } = useOrder();\r\n    const [category, setCategory] = React.useState([]);\r\n    // const [recievedData, setRecievedData] = React.useState(false);\r\n    // const userData = JSON.parse(localStorage.getItem('userData'));\r\n    const [loading, setLoading] = useState(false);\r\n    const [loading1, setLoading1] = useState(false);\r\n\r\n    React.useEffect(() => {\r\n        try {\r\n            setLoading1(true);\r\n            const fetchData = async () => {\r\n                const result = await axios.get(`${BaseUrl}/api/menu/get`);\r\n                if (result.data) {\r\n                    setMenu(result.data);\r\n                    setCategory(\r\n                        result.data.map((item) => {\r\n                            return item.Category;\r\n                        })\r\n                    );\r\n                    // setRecievedData(true);\r\n                    setLoading1(false);\r\n                } else {\r\n                    console.log('error');\r\n                    setLoading1(false);\r\n                }\r\n            };\r\n            fetchData();\r\n        } catch (err) {\r\n            console.log(err);\r\n            setLoading1(false);\r\n        }\r\n    }, []);\r\n\r\n    const getQty = React.useCallback(\r\n        async ({ id, quantity, price }) => {\r\n            try {\r\n                const userData = JSON.parse(localStorage.getItem('userData'));\r\n                const item = {\r\n                    name: id,\r\n                    quantity: quantity,\r\n                    price: price,\r\n                };\r\n                // console.log(item);\r\n                setLoading(true);\r\n                await axios.post(\r\n                    `${BaseUrl2}/api/users/cart/add`,\r\n                    {\r\n                        item: item,\r\n                        uid: userData.uid,\r\n                    },\r\n                    {\r\n                        headers: {\r\n                            Authorization: userData.token,\r\n                        },\r\n                    }\r\n                );\r\n                // let newdata = [...cartItems];\r\n                // // console.log(cartItems);\r\n                // if (quantity === 0) {\r\n                //     newdata = newdata.filter((ele) => ele.name !== id);\r\n                // } else {\r\n                //     const index = newdata.findIndex((ele) => ele.name === id);\r\n                //     if (index !== -1) {\r\n                //         newdata[index].quantity = quantity;\r\n                //     }\r\n                // }\r\n                // // console.log(newdata);\r\n                const res = await axios.post(\r\n                    `${BaseUrl2}/api/users/cart/get`,\r\n                    {\r\n                        uid: userData.uid,\r\n                    },\r\n                    {\r\n                        headers: { Authorization: userData.token },\r\n                    }\r\n                );\r\n                setCart(res.data);\r\n                setLoading(false);\r\n            } catch (err) {\r\n                // console.log(err);\r\n                setLoading(false);\r\n            }\r\n        },\r\n        [setCart, setLoading]\r\n    );\r\n\r\n    // const getStarValue = ({ value }) => {\r\n    //     console.log(value);\r\n    //     //console.log(quantity);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            {(loading || loading1) && <Spinner />}\r\n\r\n            <Tab.Container defaultActiveKey=\"first\">\r\n                <section className=\"offer-dedicated-body pt-2 pb-2 food-background\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col md={8}>\r\n                                {/* <h5 className=\"mb-4\">Recommended</h5>\r\n\t\t                              <Form className=\"explore-outlets-search mb-4\">\r\n\t\t                                 <InputGroup>\r\n\t\t                                    <Form.Control type=\"text\" placeholder=\"Search for dishes...\" />\r\n\t\t                                    <InputGroup.Append>\r\n\t\t                                       <Button type=\"button\" variant=\"link\">\r\n\t\t                                       \t<Icofont icon=\"search\" />\r\n\t\t                                       </Button>\r\n\t\t                                    </InputGroup.Append>\r\n\t\t                                 </InputGroup>\r\n\t\t                              </Form> */}\r\n\r\n                                {category &&\r\n                                    [...new Set(category)].map((item) => {\r\n                                        const DishData = [];\r\n                                        for (let data of menu) {\r\n                                            if (data.Category === item) {\r\n                                            \r\n                                                DishData.push(\r\n                                                    <QuickBite\r\n                                                        \r\n                                                        id={data.Name}\r\n                                                        title={data.Name}\r\n                                                        showBadge={true}\r\n                                                        badgeVariant={data.Veg ? 'danger' : 'success'}\r\n                                                        price={parseInt(data.Price)}\r\n                                                        priceUnit=\"₹\"\r\n                                                        getValue={getQty}\r\n                                                        key={data.Name}\r\n                                                    />\r\n                                                );\r\n                                            }\r\n                                        }\r\n                                        return (\r\n                                            <Row key={item}>\r\n                                                <h3 className=\"mb-4 mt-3 col-md-12\">\r\n                                                    {item}{' '}\r\n                                                    <small className=\"h6 text-black-50\">{DishData.length} ITEMS</small>\r\n                                                </h3>\r\n                                                <Col md={12}>\r\n                                                    <div className=\"bg-white rounded border shadow-sm\">{DishData}</div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        );\r\n                                    })}\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                {/* <div className=\"bg-white rounded shadow-sm text-white mb-4 p-4 clearfix restaurant-detailed-earn-pts card-icon-overlap\">\r\n\t\t                     <Image fluid className=\"float-left mr-3\" src=\"/img/earn-score-icon.png\" />\r\n\t\t                     <h6 className=\"pt-0 text-primary mb-1 font-weight-bold\">OFFER</h6>\r\n\t\t                     <p className=\"mb-0\">60% off on orders above $99 | Use coupon <span className=\"text-danger font-weight-bold\">OSAHAN50</span></p>\r\n\t\t                     <div className=\"icon-overlap\">\r\n\t\t                        <Icofont icon=\"sale-discount\" />\r\n\t\t                     </div>\r\n\t\t                </div> */}\r\n                                <Cart />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </section>\r\n            </Tab.Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Detail;\r\n","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\staticPages\\AboutUs.js",["316"],"import React from 'react';\r\nimport {Row,Col,Container} from 'react-bootstrap';\r\nimport SectionHeading from '../common/SectionHeading';\r\nfunction AboutUs(props){\r\n\t\r\n    \treturn (\r\n    \t\t<>\r\n\t\t\t\t<section className=\"section pt-5 pb-5 bg-white homepage-add-section food-background\" >\r\n\t\t\t\t\r\n               \r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col md={12} xs={12} >\r\n                                <blockquote class=\"blockquote blockquote-custom  p-5 shadow rounded\" style={{ background: 'white' }} >\r\n\t\t\t\t\t\t\t\t<SectionHeading\r\n\t\t\t\t\t\theading='About Us'\r\n\t\t\t\t\t\tsubHeading=''\r\n                        \r\n\t\t\t\t\t/>\r\n                                    <p class=\"mb-0 mt-2 font-italic\" style={{fontSize:'16px',color:'#454040'}}>Its hightime you wave Hi to good food and  Bye to artificial colours, preservatives and harmful adulterations!!!<br />\r\n                                            At Food dude, we envision a healthy, natural and sustainable food delivery, ensuring the best of quality checks being done, before our food reaches your doorstep.<br />\r\n                                            Let's be honest here. It's insane to compromise on the quality of food. Being casual in this aspect can make you pay huge hospital bills either in the vicinity or future.<br />\r\n                                            We at Fooddude ensure that that our customers get the premium of quality food without compromising with the quantity.<br />\r\n                                            So what are you waiting for? Go satiate your hunger at the comfort of your home by placing your first order today. We are just a fingertip away!!!!\r\n                                    </p>\r\n\r\n                                </blockquote>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t{/* <Col md={4} xs={6}>\r\n\t\t\t\t\t\t\t\t<blockquote class=\"blockquote blockquote-custom  p-5 shadow rounded\" style={{height:'300px',background:'#f0f0f0'}}>\r\n\t\t\t\t\t\t\t\t\t<div class=\"blockquote-custom-icon bg-info shadow-sm\"><i class=\"fa fa-quote-left text-white\"></i></div>\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"mb-2 font-weight-normal\"><span className=\"font-weight-bold\">Quality</span></h4>\r\n\t\t\t\t\t\t\t\t\t<p class=\"mb-0 mt-2 font-italic\">\"Fooddude provides you the best food ranging from several\r\n\t\t\t\t\t\t\tcuisines from the best kitchens throughout the city. We assure you of satisfying your palette minus\r\n\t\t\t\t\t\t\tthe food colours and unnecessary oil.\"</p>\r\n\r\n\t\t\t\t\t\t\t\t</blockquote>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col md={4} xs={6}>\r\n\t\t\t\t\t\t\t\t<blockquote class=\"blockquote blockquote-custom  p-5 shadow rounded\" style={{background:'#f0f0f0'}}>\r\n\t\t\t\t\t\t\t\t\t<div class=\"blockquote-custom-icon bg-info shadow-sm\"><i class=\"fa fa-quote-left text-white\"></i></div>\r\n\t\t\t\t\t\t\t\t\t<h4 className=\"mb-2 font-weight-normal\"><span className=\"font-weight-bold\">Hygiene</span></h4>\r\n\t\t\t\t\t\t\t\t\t<p class=\"mb-0 mt-2 font-italic\">\"The pandemic has forced us to rethink our\r\n\t\t\t\t\t\t\tsanitary practices. But, Fooddude promises that you'll never have to think twice while ordering from us.\r\n\t\t\t\t\t\t\tOur delivery agents are checked and sanitized regularly\r\n\t\t\t\t\t\t\t and use masks and gloves throughout the process to ensure your food reaches to you safely.\"</p>\r\n\r\n\t\t\t\t\t\t\t\t</blockquote>\r\n\t\t\t\t\t\t\t</Col> */}\r\n\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</section>\r\n\r\n\r\n\r\n    \t\t</>\r\n    \t);\r\n    }\r\n\r\n\r\n\r\nconst options={\r\n\tresponsive: {\r\n        0:{\r\n            items:1,\r\n        },\r\n        600:{\r\n            items:2,\r\n        },\r\n        1000: {\r\n          items: 4,\r\n        },\r\n        1200: {\r\n          items: 4,\r\n        },\r\n      },\r\n\r\n        lazyLoad: true,\r\n        pagination: false.toString(),\r\n        loop: true,\r\n        dots: false,\r\n        autoPlay: 2000,\r\n        nav: true,\r\n        navText: [\"<i class='fa fa-chevron-left'></i>\", \"<i class='fa fa-chevron-right'></i>\"]\r\n}\r\n\r\n\r\n\r\n\r\nexport default AboutUs;","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\contexts\\AuthContext.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\Header.js",["317","318","319","320","321"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { NavLink, Link, useHistory } from 'react-router-dom';\r\nimport { Navbar, Nav, Container, NavDropdown, Image, Badge } from 'react-bootstrap';\r\nimport DropDownTitle from '../common/DropDownTitle';\r\nimport Cart from '../cart/Cart';\r\nimport Icofont from 'react-icofont';\r\n\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nfunction Header(props) {\r\n    const node = React.useRef();\r\n    const [isNavExpanded, setNavExpanded] = React.useState(false);\r\n    const { logout, currentUser, cartUpdated } = useAuth();\r\n    const history = useHistory();\r\n    const [error, setError] = React.useState('');\r\n    //const userData=JSON.parse(localStorage.getItem('userData'))\r\n\r\n    //   const [showSignOutModal,setSignOutModal]=React.useState(false)\r\n    const setIsNavExpanded = () => {\r\n        setNavExpanded(true);\r\n    };\r\n    const closeMenu = () => {\r\n        setNavExpanded(false);\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        if (node.contains(e.target)) {\r\n            // if clicked inside menu do something\r\n        } else {\r\n            // If clicked outside menu, close the navbar.\r\n            setNavExpanded(false);\r\n        }\r\n    };\r\n    React.useEffect(() => {\r\n        document.addEventListener('click', handleClick, false);\r\n\r\n        return document.removeEventListener('click', handleClick, false);\r\n    });\r\n\r\n    async function handleLogout() {\r\n        setError('');\r\n        try {\r\n            await logout();\r\n            await localStorage.clear();\r\n            props.onHide();\r\n            history.push('/');\r\n        } catch {\r\n            setError('Failed to log out');\r\n        }\r\n    }\r\n    return (\r\n        <div ref={node}>\r\n            <Navbar\r\n                onToggle={setIsNavExpanded}\r\n                expanded={isNavExpanded}\r\n                bg=\"light\"\r\n                expand=\"lg\"\r\n                className=\"navbar-light osahan-nav shadow-lg\"\r\n            >\r\n                <Container>\r\n                    <Navbar.Brand to=\"/\">\r\n                        <Image src=\"/img/logo-fd-round.png\" alt=\"\" height=\"60px\" />\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle />\r\n                    <Navbar.Collapse id=\"navbarNavDropdown\">\r\n                        <Nav activeKey={0} className=\"ml-auto\" onSelect={closeMenu}>\r\n                            <Nav.Link eventKey={0} as={NavLink} activeclassname=\"active\" exact to=\"/\">\r\n                                Home <span className=\"sr-only\">(current)</span>\r\n                            </Nav.Link>\r\n                            {\r\n                                //This is the Offers Nav-Link-- Commented Out\r\n                                /* <Nav.Link eventKey={1} as={NavLink} activeclassname=\"active\" to=\"/offers\">\r\n             \t\t\t\t<Icofont icon='sale-discount'/> Offers <Badge variant=\"danger\">New</Badge>\r\n\t\t\t            </Nav.Link> */\r\n                            }\r\n\r\n                            <Nav.Link eventKey={0} as={NavLink} activeclassname=\"active\" exact to=\"/detail\">\r\n                                Make an Order <span className=\"sr-only\">(current)</span>\r\n                            </Nav.Link>\r\n                            {/* <NavDropdown title=\"Restaurants\" alignRight className=\"border-0\">\r\n\t\t\t\t\t\t\t{ // This is the Listing Nav-Link Commented out\r\n\t\t\t\t\t\t\t/* <NavDropdown.Item eventKey={2.1} as={NavLink} activeclassname=\"active\" to=\"/listing\">Listing</NavDropdown.Item> }\r\n\t\t\t            \t<NavDropdown.Item eventKey={2.2} as={NavLink} activeclassname=\"active\" to=\"/detail\">Detail + Cart</NavDropdown.Item>\r\n\t\t\t            \t{currentUser?<NavDropdown.Item eventKey={2.3} as={NavLink} activeclassname=\"active\" to=\"/checkout\">Checkout</NavDropdown.Item>:null}\r\n\t\t\t            </NavDropdown> */}\r\n                            {/* <NavDropdown title=\"Pages\" alignRight>\r\n\t\t\t            \t<NavDropdown.Item eventKey={3.1} as={NavLink} activeclassname=\"active\" to=\"/track-order\">Track Order</NavDropdown.Item>\r\n\t\t\t            \t<NavDropdown.Item eventKey={3.2} as={NavLink} activeclassname=\"active\" to=\"/invoice\">Invoice</NavDropdown.Item>\r\n\t\t\t            \t<NavDropdown.Item eventKey={3.3} as={NavLink} activeclassname=\"active\" to=\"/login\">Login</NavDropdown.Item>\r\n\t\t\t            \t<NavDropdown.Item eventKey={3.4} as={NavLink} activeclassname=\"active\" to=\"/register\">Register</NavDropdown.Item>\r\n\t\t\t            \t<NavDropdown.Item eventKey={3.5} as={NavLink} activeclassname=\"active\" to=\"/404\">404</NavDropdown.Item>\r\n\t\t\t            \t<NavDropdown.Item eventKey={3.6} as={NavLink} activeclassname=\"active\" to=\"/extra\">Extra</NavDropdown.Item>\r\n\r\n\t\t\t            </NavDropdown> */}\r\n                            {currentUser ? (\r\n                                <NavDropdown\r\n                                    alignRight\r\n                                    title={\r\n                                        <DropDownTitle\r\n                                            className=\"d-inline-block\"\r\n                                            image=\"https://cdn0.iconfinder.com/data/icons/profession-and-occupation-icons/110/avatar_occupation_profile_cook_kitchener_flunkey_food-512.png\"\r\n                                            imageAlt=\"user\"\r\n                                            imageClass=\"nav-osahan-pic rounded-pill\"\r\n                                            title=\"My Account\"\r\n                                        />\r\n                                    }\r\n                                >\r\n                                    <NavDropdown.Item\r\n                                        eventKey={4.1}\r\n                                        as={NavLink}\r\n                                        activeclassname=\"active\"\r\n                                        to=\"/myaccount/orders\"\r\n                                    >\r\n                                        <Icofont icon=\"food-cart\" /> Orders\r\n                                    </NavDropdown.Item>\r\n                                    <NavDropdown.Item\r\n                                        eventKey={4.2}\r\n                                        as={NavLink}\r\n                                        activeclassname=\"active\"\r\n                                        to=\"/myaccount/offers\"\r\n                                    >\r\n                                        <Icofont icon=\"sale-discount\" /> Offers\r\n                                    </NavDropdown.Item>\r\n                                    {/* <NavDropdown.Item eventKey={4.3} as={NavLink} activeclassname=\"active\" to=\"/myaccount/favourites\"><Icofont icon='heart'/> Favourites</NavDropdown.Item>\r\n\t\t\t\t\t\t\t<NavDropdown.Item eventKey={4.4} as={NavLink} activeclassname=\"active\" to=\"/myaccount/payments\"><Icofont icon='credit-card'/> Payments</NavDropdown.Item> */}\r\n                                    <NavDropdown.Item\r\n                                        eventKey={4.5}\r\n                                        as={NavLink}\r\n                                        activeclassname=\"active\"\r\n                                        to=\"/myaccount/addresses\"\r\n                                    >\r\n                                        <Icofont icon=\"location-pin\" /> Addresses\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : null}\r\n                            {currentUser ? <Cart /> : null}\r\n                            {currentUser ? (\r\n                                <Nav.Link eventKey={2} as={NavLink} to=\"/\" onClick={handleLogout}>\r\n                                    <Icofont icon=\"login\" /> Sign Out\r\n                                </Nav.Link>\r\n                            ) : null}\r\n                            {!currentUser ? (\r\n                                <Nav.Link eventKey={2} as={NavLink} activeclassname=\"active\" to=\"/login\">\r\n                                    <Icofont icon=\"login\" /> Sign In\r\n                                </Nav.Link>\r\n                            ) : null}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n            {/* <SignOutModal show={showSignOutModal} onHide={hideSignOutModal}/> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\Footer.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\SectionHeading.js",["322"],"import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nclass SectionHeading extends React.Component {\r\n\trender() {\r\n    \treturn (\r\n            <div  className={`section-header ${this.props.alignClass}`}>\r\n               <h1 style={{background:'white'}} style={{fontWeight:'700'}}>{this.props.heading}</h1>\r\n               {this.props.subHeading ? (\r\n               \t\t<p>{this.props.subHeading}</p>\r\n               \t\t):''\r\n               }\r\n               <span className=\"line\"></span>\r\n            </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nSectionHeading.propTypes = {\r\n  heading: PropTypes.string.isRequired,\r\n  subHeading: PropTypes.string,\r\n  alignClass: PropTypes.string,\r\n};\r\nSectionHeading.defaultProps = {\r\n  subHeading: '',\r\n  alignClass: 'text-center',\r\n}\r\n\r\nexport default SectionHeading;","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\PageTitle.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\CouponCard.js",["323","324"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Image,Button} from 'react-bootstrap';\r\nimport PropTypes from 'prop-types'; \r\n\r\nclass CouponCard extends React.Component {\r\n\r\n\trender() {\r\n    \treturn (\r\n    \t\t<div className={\"card offer-card shadow-sm mb-4\" + (this.props.noBorder ? ' border-0' : '')}>\r\n\t             <div className=\"card-body\">\r\n\t             \t{(this.props.logoImage || this.props.couponCode)?\r\n\t\t                (<h5 className=\"card-title\">\r\n\t\t                \t\r\n\t\t                \t{this.props.couponCode?\r\n\t\t                \t\tthis.props.couponCode\r\n\t\t                \t\t:\"\"\r\n\t\t                \t}\r\n\t\t                </h5>)\r\n\t\t                :\"\"\r\n\t\t            }\r\n\t                <h6 className=\"card-subtitle mb-2 text-block\">{this.props.title}</h6>\r\n\t                {this.props.subTitle?\r\n\t                \t<p className=\"card-text\">\r\n\t                \t\t{this.props.subTitle}\r\n\t                \t</p>\r\n\t                \t:\"\"\r\n\t                }\r\n\t                {this.props.copyBtnText?\r\n\t                \t<Button variant=\"link\" className=\"card-btn mr-3 p-0\">{this.props.copyBtnText}</Button>\r\n\t                \t:\"\"\r\n\t                }\r\n\t                \r\n\t             </div>\r\n\t        </div>\r\n    \t);\r\n    }\r\n}\r\n\r\nCouponCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  logoImage: PropTypes.string,\r\n  subTitle: PropTypes.string,\r\n  imageAlt: PropTypes.string,\r\n  imageclassName: PropTypes.string,\r\n  morelinkUrl: PropTypes.string,\r\n  moreLinkText: PropTypes.string,\r\n  copyBtnText: PropTypes.string,\r\n  couponCode: PropTypes.string,\r\n  noBorder: PropTypes.bool,\r\n};\r\nCouponCard.defaultProps = {\r\n  logoImage: '',\r\n  subTitle: '',\r\n  imageAlt: '',\r\n  imageclassName: '',\r\n  morelinkUrl: '#',\r\n  moreLinkText: 'KNOW MORE',\r\n  copyBtnText: '',\r\n  couponCode: '',\r\n  noBorder: true,\r\n}\r\n\r\nexport default CouponCard;","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\BankOffers.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\CardItem.js",["325","326"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Image,Badge} from 'react-bootstrap';\r\nimport PropTypes from 'prop-types'; \r\nimport Icofont from 'react-icofont';\r\n\r\nclass CardItem extends React.Component {\r\n\trender() {\r\n    \treturn (\r\n    \t\t<div className=\"list-card bg-white h-100 rounded overflow-hidden position-relative shadow-sm\">\r\n               <div className=\"list-card-image\">\r\n               \t  {/* {this.props.rating ? (\r\n\t                  <div className=\"star position-absolute\">\r\n                  \t\t<Badge variant=\"success\">\r\n\t                  \t\t<Icofont icon='star'/> {this.props.rating}\r\n\t                  \t</Badge>\r\n\t              \t  </div>\r\n\t              \t  )\r\n\t              \t  :\"\"\r\n\t              } */}\r\n                  {/* <div className={`favourite-heart position-absolute ${this.props.favIcoIconColor}`}>\r\n                  \t<Link to={this.props.linkUrl}>\r\n                  \t\t<Icofont icon='heart'/>\r\n                  \t</Link>\r\n                  </div> */}\r\n                  {/* {this.props.showPromoted ? (\r\n\t                  <div className=\"member-plan position-absolute\">\r\n\t                  \t<Badge variant={this.props.promotedVariant}>Promoted</Badge>\r\n\t                  </div>\r\n\t                  )\r\n                  \t  :\"\"\r\n                  } */}\r\n                  <Link to={this.props.linkUrl}>\r\n                  \t<Image src={this.props.image} className={this.props.imageClass} alt={this.props.imageAlt} />\r\n                  </Link>\r\n               </div>\r\n               <div className=\"p-3 position-relative\">\r\n                  <div className=\"list-card-body\">\r\n                     <h6 className=\"mb-1\"><Link to={this.props.linkUrl} className=\"text-black\">{this.props.title}</Link></h6>\r\n                     {this.props.subTitle ? (\r\n\t                     <p className=\"text-gray mb-3\">{this.props.subTitle}</p>\r\n\t                     )\r\n\t                     :''\r\n\t                 }\r\n\t                 {/* {(this.props.time || this.props.price)? (\r\n\t                     <p className=\"text-gray mb-3 time\">\r\n\t                     \t{this.props.time ? (\r\n\t\t                     \t<span className=\"bg-light text-dark rounded-sm pl-2 pb-1 pt-1 pr-2\">\r\n\t\t                     \t\t<Icofont icon='wall-clock'/> {this.props.time}\r\n\t\t                     \t</span> \r\n\t\t                     \t)\r\n\t\t                     \t:\"\"\r\n\t\t                    }\r\n\t\t\t\t\t\t\t{this.props.price ? (\r\n\t                     \t\t<span className=\"float-right text-black-50\"> {this.props.price}</span>\r\n\t                     \t\t)\r\n\t                     \t\t:\"\"\r\n\t                     \t}\r\n\t                     </p>\r\n\t                   \t):''\r\n\t                 } */}\r\n                  </div>\r\n                  {/* {this.props.offerText ? (\r\n\t                  <div className=\"list-card-badge\">\r\n\t                     <Badge variant={this.props.offerColor}>OFFER</Badge> <small>{this.props.offerText}</small>\r\n\t                  </div>\r\n\t                  )\r\n\t                  :\"\"\r\n\t              } */}\r\n               </div>\r\n            </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nCardItem.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  imageAlt: PropTypes.string,\r\n  image: PropTypes.string.isRequired,\r\n  imageClass: PropTypes.string,\r\n  linkUrl: PropTypes.string.isRequired,\r\n  offerText: PropTypes.string,\r\n  offerColor: PropTypes.string,\r\n  subTitle: PropTypes.string,\r\n  time: PropTypes.string,\r\n  price: PropTypes.string,\r\n  showPromoted: PropTypes.bool,\r\n  promotedVariant: PropTypes.string,\r\n  favIcoIconColor: PropTypes.string,\r\n  rating: PropTypes.string,\r\n};\r\nCardItem.defaultProps = {\r\n  \timageAlt:'',\r\n    imageClass:'',\r\n    offerText: '',\r\n    offerColor: 'success',\r\n\tsubTitle: '',\r\n\ttime: '',\r\n\tprice: '',\r\n\tshowPromoted: false,\r\n  \tpromotedVariant: 'dark',\r\n\tfavIcoIconColor: '',\r\n\trating: '',\r\n}\r\n\r\nexport default CardItem;","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\CategoriesCarousel.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\FontAwesome.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\firebase.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\ItemsCarousel.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\ChooseAddressCard.js",["327","328","329"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Card,Media,Button} from 'react-bootstrap';\r\nimport Icofont from 'react-icofont';\r\nimport PropTypes from 'prop-types'; \r\n\r\nfunction ChooseAddressCard(props) {\r\n\r\n\tconst [focus,setFocus]=React.useState(false)\r\n    \treturn (\r\n        <Card className={\" addresses-item mb-4 \" + (props.boxclassName)} style={{background:focus&&'#cdffba'}}>\r\n            <div className=\"gold-members p-4\">\r\n               <Media>\r\n                  <div className=\"mr-3\"><Icofont icon={props.icoIcon} className={props.iconclassName} /></div>\r\n                  <div className=\"media-body\">\r\n                     <h6 className=\"mb-1 text-secondary\">{props.title}</h6>\r\n                     <p className=\"text-black\">{props.address}\r\n                     </p>\r\n                     {/* <p className=\"mb-0 text-black font-weight-bold\">\r\n                     \t{props.type===\"hasAddress\"?\r\n\t                        (<><Button  variant=\"success\" disabled={props.disableIt} className=\"btn btn-md btn-success mr-2\" to=\"#\" onClick={()=>{setFocus(!focus)\r\n                              props.onDeliverHereClick()}}> DELIVER HERE </Button>\r\n\t                        </>)\r\n\t                        :<Link className=\"btn btn-sm btn-primary mr-2\" to=\"#\" onClick={props.onAddNewClick}> ADD NEW ADDRESS </Link>\r\n                     \t}\r\n                     </p> */}\r\n                  </div>\r\n               </Media>\r\n            </div>\r\n        </Card>\r\n    \t);\r\n    }\r\n\r\n\r\nChooseAddressCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icoIcon: PropTypes.string.isRequired,\r\n  iconclassName: PropTypes.string,\r\n  address: PropTypes.string,\r\n  onDeliverHere: PropTypes.func,\r\n  onAddNewClick: PropTypes.func,\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nChooseAddressCard.defaultProps = {\r\n  \ttype:'hasAddress'\r\n}\r\n\r\n\r\nexport default ChooseAddressCard;\r\n","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\BaseUrl.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\CheckoutItem.js",["330","331"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'react-bootstrap';\r\nimport Icofont from 'react-icofont';\r\n\r\nfunction CheckoutItem(props) {\r\n    const [quantity, setQuantity] = React.useState(props.qty);\r\n    // const max = props.maxValue || 5;\r\n    // const min = props.minValue || 0;\r\n    // const [show, setShow] = React.useState(props.show || true);\r\n    // const price = props.price;\r\n\r\n    // const IncrementItem = () => {\r\n    //     if (quantity >= max) {\r\n    //     } else {\r\n    //         // setQuantity(quantity+1)\r\n    //         props.getValue({ id: props.id, quantity: quantity + 1, price: price });\r\n    //     }\r\n    // };\r\n    // const DecreaseItem = () => {\r\n    //     if (quantity <= min) {\r\n    //     } else {\r\n    //         // setQuantity(quantity-1)\r\n    //         props.getValue({ id: props.id, quantity: quantity - 1, price: price });\r\n    //     }\r\n    // };\r\n\r\n    // const ToggleClick = () => {\r\n    //     setShow(!show);\r\n    // };\r\n    React.useEffect(() => {\r\n        setQuantity(props.qty);\r\n    }, [setQuantity, props.qty]);\r\n\r\n    return (\r\n        <div className=\"gold-members p-2 border-bottom\">\r\n            {' '}\r\n            <p className=\"text-gray mb-0 float-right ml-2\">\r\n                {props.priceUnit}\r\n                {parseInt(props.price) * quantity}\r\n            </p>\r\n            <span className=\"count-number float-right\">\r\n                {/* <Button\r\n                    disabled={props.diabled}\r\n                    variant=\"outline-secondary\"\r\n                    onClick={DecreaseItem}\r\n                    className=\"btn-sm left dec\"\r\n                >\r\n                    {' '}\r\n                    [{' '}\r\n                </Button> */}\r\n                <input className=\"count-number-input\" type=\"number\" value={quantity} readOnly />\r\n                {/* <Button\r\n                    disabled={props.diabled}\r\n                    variant=\"outline-secondary\"\r\n                    onClick={IncrementItem}\r\n                    className=\"btn-sm right inc\"\r\n                >\r\n                    {' '}\r\n                    ]{' '}\r\n                </Button> */}\r\n            </span>\r\n            <div className=\"media\">\r\n                <div className=\"mr-2\">\r\n                    <Icofont icon=\"ui-press\" className={`text-${props.veg ? 'danger' : 'success'} food-item`} />\r\n                </div>\r\n                <div className=\"media-body\">\r\n                    <p className=\"mt-1 mb-0 text-black\">{props.itemName}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nCheckoutItem.propTypes = {\r\n    itemName: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    priceUnit: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    qty: PropTypes.number.isRequired,\r\n    show: PropTypes.bool.isRequired,\r\n    minValue: PropTypes.number,\r\n    maxValue: PropTypes.number,\r\n    getValue: PropTypes.func.isRequired,\r\n};\r\nCheckoutItem.defaultProps = {\r\n    show: true,\r\n    priceUnit: '$',\r\n};\r\n\r\nexport default CheckoutItem;\r\n","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\HeadingValue.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\GalleryCarousel.js",[],["332","333"],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\BestSeller.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\QuickBite.js",["334"],"import React, { useEffect } from 'react';\r\nimport { Image, Badge, Button, Media } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport Icofont from 'react-icofont';\r\nimport { useOrder } from '../../contexts/OrderContext';\r\n\r\nfunction QuickBite(props) {\r\n    const { cartItems } = useOrder();\r\n    const [quantity, setQuantity] = React.useState(cartItems.find((ele) => ele.name === props.title)?.quantity);\r\n    const max = props.maxValue || 5;\r\n    const min = props.minValue || 0;\r\n    // const show = props.show || true\r\n    const price = props.price;\r\n    //   state = {\r\n    //     quantity: props.qty || 0,\r\n    //     show: props.show || true,\r\n    //     max:props.maxValue || 5,\r\n    //     min:props.minValue || 0\r\n    //   };\r\n    // }\r\n    useEffect(() => {\r\n        setQuantity(cartItems.find((ele) => ele.name === props.title)?.quantity);\r\n    }, [cartItems]);\r\n    const IncrementItem = () => {\r\n        if (quantity >= max) {\r\n        } else {\r\n            setQuantity(quantity + 1);\r\n            props.getValue({ id: props.id, quantity: quantity + 1, price: price });\r\n        }\r\n    };\r\n    const DecreaseItem = () => {\r\n        if (quantity <= min) {\r\n        } else {\r\n            setQuantity(quantity - 1);\r\n            props.getValue({ id: props.id, quantity: quantity - 1, price: price });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={'p-3 border-bottom ' + props.itemClass}>\r\n            {quantity === undefined ? (\r\n                <span className=\"float-right\">\r\n                    <Button variant=\"outline-secondary\" onClick={IncrementItem} size=\"sm\">\r\n                        ADD\r\n                    </Button>\r\n                </span>\r\n            ) : (\r\n                <span className=\"count-number float-right\">\r\n                    <Button variant=\"outline-secondary\" onClick={DecreaseItem} className=\"btn-sm left dec\">\r\n                        {' '}\r\n                        <Icofont icon=\"minus\" />{' '}\r\n                    </Button>\r\n                    <input className=\"count-number-input\" type=\"text\" value={quantity} readOnly />\r\n                    <Button variant=\"outline-secondary\" onClick={IncrementItem} className=\"btn-sm right inc\">\r\n                        {' '}\r\n                        <Icofont icon=\"icofont-plus\" />{' '}\r\n                    </Button>\r\n                </span>\r\n            )}\r\n            <Media>\r\n                {props.image ? (\r\n                    <Image className={'mr-3 rounded-pill ' + props.imageClass} src={props.image} alt={props.imageAlt} />\r\n                ) : (\r\n                    <div className=\"mr-3\">\r\n                        <Icofont icon=\"ui-press\" className={'text-' + props.badgeVariant + ' food-item'} />\r\n                    </div>\r\n                )}\r\n                <Media.Body>\r\n                    <h6 className=\"mb-1\">\r\n                        {props.title}{' '}\r\n                        {props.showBadge ? <Badge variant={props.badgeVariant}>{props.badgeText}</Badge> : ''}\r\n                    </h6>\r\n                    <p className=\"text-gray mb-0\">\r\n                        {props.priceUnit}\r\n                        {props.price}\r\n                    </p>\r\n                </Media.Body>\r\n            </Media>\r\n        </div>\r\n    );\r\n}\r\n\r\nQuickBite.propTypes = {\r\n    itemClass: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    imageAlt: PropTypes.string,\r\n    image: PropTypes.string,\r\n    imageClass: PropTypes.string,\r\n    showBadge: PropTypes.bool,\r\n    badgeVariant: PropTypes.string,\r\n    badgeText: PropTypes.string,\r\n    price: PropTypes.number.isRequired,\r\n    priceUnit: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    qty: PropTypes.number,\r\n    minValue: PropTypes.number,\r\n    maxValue: PropTypes.number,\r\n    getValue: PropTypes.func.isRequired,\r\n};\r\nQuickBite.defaultProps = {\r\n    itemClass: 'gold-members',\r\n    imageAlt: '',\r\n    imageClass: '',\r\n    showBadge: false,\r\n    price: '',\r\n    priceUnit: '$',\r\n    showPromoted: false,\r\n    badgeVariant: 'danger',\r\n};\r\n\r\nexport default QuickBite;\r\n","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\DropDownTitle.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\cart\\CartDropdownItem.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\cart\\Cart.js",["335"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { NavDropdown } from 'react-bootstrap';\r\nimport DropDownTitle from '../common/DropDownTitle';\r\nimport CartDropdownHeader from '../cart/CartDropdownHeader';\r\nimport CartDropdownItem from '../cart/CartDropdownItem';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { useOrder } from '../../contexts/OrderContext';\r\nimport { BaseUrl2 } from '../../BaseUrl';\r\nimport Spinner from '../Spinner/index';\r\nexport default function Cart(props) {\r\n    // const [cartData, setCartData] = React.useState([]);\r\n    // const { cartUpdated } = useAuth();\r\n    // const [totalPrice, setTotalPrice] = React.useState(0);\r\n    const { cartItems, total, setCart } = useOrder();\r\n    const [loading, setLoading] = useState(false);\r\n    const { logout } = useAuth();\r\n    React.useEffect(() => {\r\n        const userData = JSON.parse(localStorage.getItem('userData'));\r\n\r\n        if (userData) {\r\n            console.log('ohnnooo');\r\n            setLoading(true);\r\n            (async () => {\r\n                try {\r\n                    const result = await axios.post(\r\n                        `${BaseUrl2}/api/users/cart/get`,\r\n                        {\r\n                            uid: userData.uid,\r\n                        },\r\n                        {\r\n                            headers: { Authorization: userData.token },\r\n                        }\r\n                    );\r\n\r\n                    // console.log(result);\r\n                    if (result === undefined || result.data === undefined) {\r\n                        // console.log('error');\r\n                        setLoading(false);\r\n                        logout();\r\n                        alert('Due to some technical problem and your safety we logged you out!');\r\n                    } else {\r\n                        setLoading(false);\r\n                        setCart(result.data);\r\n                    }\r\n                } catch (e) {\r\n                    console.log(e);\r\n                    setLoading(false);\r\n                    logout();\r\n                    alert('Due to some technical problem and your safety we logged you out!');\r\n                }\r\n            })();\r\n        }\r\n    }, [setCart]);\r\n\r\n    return (\r\n        <>\r\n            {loading && <Spinner />}\r\n            <NavDropdown\r\n                activeclassname=\"active\"\r\n                alignRight\r\n                className=\"dropdown-cart\"\r\n                title={\r\n                    <DropDownTitle\r\n                        className=\"d-inline-block\"\r\n                        faIcon=\"shopping-basket\"\r\n                        iconClass=\"mr-1\"\r\n                        title=\"Cart\"\r\n                        badgeClass=\"ml-1\"\r\n                        badgeVariant=\"success\"\r\n                        badgeValue={cartItems && cartItems.length}\r\n                    />\r\n                }\r\n            >\r\n                <div className=\"dropdown-cart-top shadow-sm\">\r\n                    {\r\n                        <CartDropdownHeader\r\n                            className=\"dropdown-cart-top-header p-4\"\r\n                            title=\"Your Cart\"\r\n                            subTitle=\"Remember!! Belly rules the mind :)\"\r\n                            NavLinkUrl=\"/detail\"\r\n                            NavLinkText=\"View Full Menu\"\r\n                        />\r\n                    }\r\n                    <div className=\"dropdown-cart-top-body border-top p-4\">\r\n                        {cartItems.map((item) => {\r\n                            return (\r\n                                <CartDropdownItem\r\n                                    icoIcon=\"ui-press\"\r\n                                    key={item.name}\r\n                                    iconClass={`text-${\r\n                                        item.name.toLowerCase().includes('chicken') ||\r\n                                        item.name.toLowerCase().includes('fish') ||\r\n                                        item.name.toLowerCase().includes('mutton')\r\n                                            ? 'danger'\r\n                                            : 'success'\r\n                                    } food-item`}\r\n                                    title={`${item.name} x ${item.quantity}`}\r\n                                    price={`₹${item.quantity * item.price}`}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <div className=\"dropdown-cart-top-footer border-top p-4\">\r\n                        <p className=\"mb-0 font-weight-bold text-secondary\">\r\n                            Sub Total <span className=\"float-right text-dark\">{total}</span>\r\n                        </p>\r\n                        <small className=\"text-info\">Extra charges may apply</small>\r\n                    </div>\r\n                    <div className=\"dropdown-cart-top-footer border-top p-2\">\r\n                        <NavDropdown.Item\r\n                            eventKey={5.1}\r\n                            as={Link}\r\n                            className=\"btn btn-success btn-block py-3 text-white text-center dropdown-item\"\r\n                            to=\"/checkout\"\r\n                        >\r\n                            {' '}\r\n                            Checkout\r\n                        </NavDropdown.Item>\r\n                    </div>\r\n                </div>\r\n            </NavDropdown>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\myaccount\\Offers.js",["336"],"import React from 'react';\r\nimport axios from 'axios'\r\nimport {Row,Col} from 'react-bootstrap';\r\nimport CouponCard from '../common/CouponCard';\r\nimport {BaseUrl} from '../../BaseUrl'\r\n\r\n\r\nfunction Offers(props)  {\r\n\r\n\tconst [promoData, setpromoData] = React.useState([]);\r\n\tconst [recievedData, setRecievedData] = React.useState(false)\r\n\r\n\r\n\tReact.useEffect(()=>{\r\n\t\ttry{\r\n\t\tconst fetchData= async ()=>{\r\n\t\t  const result= await axios.get(`${BaseUrl}/api/promocode/get`) ;\r\n\t\t  \r\n\t\t  if(result.data){\r\n\t\t\tsetpromoData(result.data)\r\n\t\t\tsetRecievedData(true)\r\n\t\t  }\r\n\t\t\r\n\t\t  else {\r\n\t\t   console.log(\"error\")\r\n\t\t  } \r\n\t  }\r\n\t\tfetchData();\r\n\t\t\r\n\t  }catch(err){\r\n\t\t  console.log(err);\r\n\t\t}\r\n\t  \r\n\t  },[]);\r\n\r\n\r\n    \treturn (\r\n    \t\t<>\r\n    \t\t    <div className='p-4 bg-white shadow-sm'>\r\n\t              <Row>\r\n\t               <Col md={12}>\r\n\t                  <h4 className=\"font-weight-bold mt-0 mb-3\">Offers For You</h4>\r\n\t               </Col>\r\n\t              \r\n\t\t\t\t   {promoData.map(item=>{\r\n\t\t\t\t\t   return(\r\n\t\t\t\t\t\t<Col md={6}>\r\n\t\t\t\t\t\t<CouponCard \r\n\t\t\t\t\t\t title= 'Get 50% OFF on your first osahan eat order'\r\n\t\t\t\t\t\t logoImage= 'img/bank/1.png'\r\n\t\t\t\t\t\t subTitle= {item.Description}\r\n\t\t\t\t\t\t copyBtnText= 'COPY CODE'\r\n\t\t\t\t\t\t couponCode= {item.code}\r\n\t\t\t\t\t\t noBorder={false}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t  </Col>\r\n\t\t\t\t\t   )\r\n\t\t\t\t   })}\r\n\t               <Col md={6}>\r\n\t               \t  <CouponCard \r\n\t\t\t\t\t\t  title= 'Get 50% OFF on your first osahan eat order'\r\n\t\t\t\t\t\t  logoImage= 'img/bank/2.png'\r\n\t\t\t\t\t\t  subTitle= 'Use code EAT730 & get 50% off on your first osahan order on Website and Mobile site. Maximum discount: $600'\r\n\t\t\t\t\t\t  copyBtnText= 'COPY CODE'\r\n\t\t\t\t\t\t  couponCode= 'EAT730'\r\n\t\t\t\t\t\t  noBorder={false}\r\n\t               \t  />\r\n\t               </Col>\r\n\t               <Col md={6}>\r\n\t               \t  <CouponCard \r\n\t\t\t\t\t\t  title= 'Get 50% OFF on your first osahan eat order'\r\n\t\t\t\t\t\t  logoImage= 'img/bank/3.png'\r\n\t\t\t\t\t\t  subTitle= 'Use code SAHAN50 & get 50% off on your first osahan order on Website and Mobile site. Maximum discount: $200'\r\n\t\t\t\t\t\t  copyBtnText= 'COPY CODE'\r\n\t\t\t\t\t\t  couponCode= 'SAHAN50'\r\n\t\t\t\t\t\t  noBorder={false}\r\n\t               \t  />\r\n\t               </Col>\r\n\t               <Col md={6}>\r\n\t               \t  <CouponCard \r\n\t\t\t\t\t\t  title= 'Get 50% OFF on your first osahan eat order'\r\n\t\t\t\t\t\t  logoImage= 'img/bank/4.png'\r\n\t\t\t\t\t\t  subTitle= 'Use code GURDEEP50 & get 50% off on your first osahan order on Website and Mobile site. Maximum discount: $600'\r\n\t\t\t\t\t\t  copyBtnText= 'COPY CODE'\r\n\t\t\t\t\t\t  couponCode= 'GURDEEP50'\r\n\t\t\t\t\t\t  noBorder={false}\r\n\t               \t  />\r\n\t               </Col>\r\n\t               <Col md={6}>\r\n\t               \t  <CouponCard \r\n\t\t\t\t\t\t  title= 'Get 50% OFF on your first osahan eat order'\r\n\t\t\t\t\t\t  logoImage= 'img/bank/5.png'\r\n\t\t\t\t\t\t  subTitle= 'Use code OSAHANEAT50 & get 50% off on your first osahan order on Website and Mobile site. Maximum discount: $200'\r\n\t\t\t\t\t\t  copyBtnText= 'COPY CODE'\r\n\t\t\t\t\t\t  couponCode= 'OSAHANEAT50'\r\n\t\t\t\t\t\t  noBorder={false}\r\n\t               \t  />\r\n\t               </Col>\r\n\t               <Col md={6}>\r\n\t               \t  <CouponCard \r\n\t\t\t\t\t\t  title= 'Get 50% OFF on your first osahan eat order'\r\n\t\t\t\t\t\t  logoImage= 'img/bank/6.png'\r\n\t\t\t\t\t\t  subTitle= 'Use code OSAHANEAT50 & get 50% off on your first osahan order on Website and Mobile site. Maximum discount: $200'\r\n\t\t\t\t\t\t  copyBtnText= 'COPY CODE'\r\n\t\t\t\t\t\t  couponCode= 'OSAHANEAT50'\r\n\t\t\t\t\t\t  noBorder={false}\r\n\t               \t  />\r\n\t               </Col>\r\n\t            </Row>\r\n\t\t\t    </div>\r\n\t\t    </>\r\n    \t);\r\n    }\r\n\r\nexport default Offers;","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\myaccount\\Favourites.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\myaccount\\Payments.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\myaccount\\Addresses.js",["337","338"],"import React from 'react';\r\nimport axios from 'axios'\r\nimport {Row,Col,Button} from 'react-bootstrap';\r\nimport AddAddressModal from '../modals/AddAddressModal';\r\nimport DeleteAddressModal from '../modals/DeleteAddressModal';\r\nimport EditAddressModal from '../modals/EditAddressModal'\r\nimport AddressCard from '../common/AddressCard';\r\nimport {BaseUrl2} from '../../BaseUrl'\r\nfunction Addresses() {\r\n\tconst [addressModal,showAddressModal]=React.useState(false)\r\n\tconst [editModal,showEditModal]=React.useState(false)\r\n\tconst [deleteModal,showDeleteModal]=React.useState(false)\r\n    const [AddressData, setAddressData] = React.useState([]);\r\n    const [recievedData, setRecievedData] = React.useState(false)\r\n    const {uid,token} = JSON.parse(localStorage.getItem(\"userData\"))\r\n    const [addressId,setAddressId]=React.useState('')\r\n    const [updated,isUpdated]=React.useState()\r\n  \r\n\t\r\n\tReact.useEffect(()=>{\r\n\t  try{\r\n\t\t  console.log(uid)\r\n\t  const fetchData= async ()=>{\r\n\t\tconst result= await axios.post(`${BaseUrl2}/api/users/address/get-all`,{\r\n\t\t\tuid:uid\r\n\t\t},{\r\n\t\t\theaders:{Authorization:token}\r\n\t\t}) ;\r\n\t\t\r\n\t\tif(result.data){\r\n\t\t\tconsole.log(result.data)\r\n\t\t  setAddressData(result.data)\r\n\t\t  setRecievedData(true)\r\n\t\t}\r\n\t  \r\n\t\telse {\r\n\t\t console.log(\"error\")\r\n\t\t} \r\n\t}\r\n\t  fetchData();\r\n\t  \r\n\t}catch(err){\r\n\t\tconsole.log(err);\r\n\t  }\r\n\t\r\n\t},[updated]);\r\n\t\r\n\tconst  hideDeleteModal = () => showDeleteModal(false);\r\n\tconst  hideAddressModal = () => showAddressModal(false);\r\n\tconst  hideEditModal = () => showEditModal(false);\r\n\r\n\treturn (\r\n\t      <>\r\n\t\t\t<EditAddressModal show={editModal} onHide={hideEditModal} isUpdated={isUpdated} addressId={addressId}/>\r\n\t        <AddAddressModal show={addressModal} onHide={hideAddressModal} isUpdated={isUpdated} />\r\n\t        <DeleteAddressModal show={deleteModal} onHide={hideDeleteModal} isUpdated={isUpdated} addressId={addressId}/>\r\n\t\t    <div className='p-4 bg-white shadow-sm'>\r\n              <Row>\r\n               <Col md={12}>\r\n                  <h4 className=\"font-weight-bold mt-0 mb-3\">Manage Addresses</h4>\r\n               </Col>\r\n               \r\n\t\t\t   {AddressData.map(item=>{\r\n\t\t\t\t   return(\r\n\t\t\t\t\t   <Col md={6}>\r\n\t\t\t\t\t\t   <AddressCard\r\n\t\t\t\t\t\t\t   boxClass=\"border border-primary shadow\"\r\n\t\t\t\t\t\t\t   title='Home'\r\n\t\t\t\t\t\t\t   icoIcon='ui-home'\r\n\t\t\t\t\t\t\t   iconclassName='icofont-3x'\r\n\t\t\t\t\t\t\t   address={`${item.housenumber}, ${item.line1}, ${item.line2}, ${item.city},${item.state} ${item.pincode}, India`}\r\n\t\t\t\t\t\t\t   onEditClick={() => {\r\n\t\t\t\t\t\t\t\tsetAddressId(item.id)  \r\n\t\t\t\t\t\t\t\tshowEditModal(true)\r\n\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t   onDeleteClick={() => {\r\n\t\t\t\t\t\t\t\tsetAddressId(item.id)   \r\n\t\t\t\t\t\t\t\tshowDeleteModal(true)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t   />\r\n\t\t\t\t\t   </Col>\r\n\t\t\t\t   )\r\n\t\t\t   })}\r\n\r\n\t\t\t\t\t\t<Col md={12}>\r\n\t\t\t\t\t\t\t<div style={{display:'flex',justifyContent:'center'}}> \r\n\t\t\t\t\t\t\t<Button type='button' onClick={()=>{showAddressModal(true)}} variant=\"primary\" className='d-flex w-50 text-center justify-content-center'>Add Address</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Col>\r\n               {/* <Col md={6}>\r\n               \t  <AddressCard \r\n               \t  \t  boxClass=\"shadow-sm\"\r\n\t\t\t\t\t  title= 'Work'\r\n\t\t\t\t\t  icoIcon= 'briefcase'\r\n\t\t\t\t\t  iconclassName= 'icofont-3x'\r\n\t\t\t\t\t  address= 'NCC, Model Town Rd, Pritm Nagar, Model Town, Ludhiana, Punjab 141002, India'\r\n\t\t\t\t\t  onEditClick= {() => showAddressModal(true)}\r\n\t\t\t\t\t  onDeleteClick={() =>  showDeleteModal(true)}\r\n               \t  />\r\n               </Col>\r\n               <Col md={6}>\r\n               \t  <AddressCard \r\n               \t  \t  boxClass=\"shadow-sm\"\r\n\t\t\t\t\t  title= 'Other'\r\n\t\t\t\t\t  icoIcon= 'location-pin'\r\n\t\t\t\t\t  iconclassName= 'icofont-3x'\r\n\t\t\t\t\t  address= 'Delhi Bypass Rd, Jawaddi Taksal, Ludhiana, Punjab 141002, India'\r\n\t\t\t\t\t  onEditClick= {() => showAddressModal(true)}\r\n\t\t\t\t\t  onDeleteClick={() =>  showDeleteModal(true)}\r\n               \t  />\r\n               </Col>\r\n               <Col md={6}>\r\n               \t  <AddressCard \r\n               \t  \t  boxClass=\"shadow-sm\"\r\n\t\t\t\t\t  title= 'Other'\r\n\t\t\t\t\t  icoIcon= 'location-pin'\r\n\t\t\t\t\t  iconclassName= 'icofont-3x'\r\n\t\t\t\t\t  address= 'MT, Model Town Rd, Pritm Nagar, Model Town, Ludhiana, Punjab 141002, India'\r\n\t\t\t\t\t  onEditClick= {() => showAddressModal(true)}\r\n\t\t\t\t\t  onDeleteClick={() =>  showDeleteModal(true)}\r\n               \t  />\r\n               </Col>\r\n               <Col md={6}>\r\n               \t  <AddressCard \r\n               \t  \t  boxClass=\"shadow-sm\"\r\n\t\t\t\t\t  title= 'Other'\r\n\t\t\t\t\t  icoIcon= 'location-pin'\r\n\t\t\t\t\t  iconclassName= 'icofont-3x'\r\n\t\t\t\t\t  address= 'GNE Rd, Jawaddi Taksal, Ludhiana, Punjab 141002, India'\r\n\t\t\t\t\t  onEditClick= {() => showAddressModal(true)}\r\n\t\t\t\t\t  onDeleteClick={() =>  showDeleteModal(true)}\r\n               \t  />\r\n               </Col>\r\n               <Col md={6}>\r\n               \t  <AddressCard \r\n               \t  \t  boxClass=\"shadow-sm\"\r\n\t\t\t\t\t  title= 'Other'\r\n\t\t\t\t\t  icoIcon= 'location-pin'\r\n\t\t\t\t\t  iconclassName= 'icofont-3x'\r\n\t\t\t\t\t  address= 'GTTT, Model Town Rd, Pritm Nagar, Model Town, Ludhiana, Punjab 141002, India'\r\n\t\t\t\t\t  onEditClick= {() => showAddressModal(true)}\r\n\t\t\t\t\t  onDeleteClick={() =>  showDeleteModal(true)}\r\n               \t  />\r\n               </Col> */}\r\n              </Row>\r\n\t\t    </div>\r\n\t      </>\r\n    \t);\r\n    }\r\n\r\nexport default Addresses;","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\myaccount\\Orders.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\modals\\EditProfileModal.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\modals\\AddAddressModal.js",["339","340","341"],"import React from 'react';\r\nimport {Form,InputGroup,Modal,ButtonToolbar,Button,ToggleButton,ToggleButtonGroup} from 'react-bootstrap';\r\n\r\nexport default function AddAddressModal(props) {\r\nconst housenoRef=React.useRef()\r\nconst line1Ref=React.useRef()\r\nconst line2Ref=React.useRef()\r\nconst cityRef=React.useRef()\r\nconst stateRef=React.useRef()\r\nconst pincodeRef=React.useRef()\r\n\r\nconst {token,uid}=JSON.parse(localStorage.getItem('userData'))\r\nconst handleSubmit=async (e)=>{\r\n\te.preventDefault()\r\n   const address ={\r\n\t   housenumber:housenoRef.current.value,\r\n\t   line1:line1Ref.current.value,\r\n\t   line2:line2Ref.current.value,\r\n\t   city:cityRef.current.value,\r\n\t   state:stateRef.current.value,\r\n\t   pincode:pincodeRef.current.value\r\n   }\r\n\r\n    try {\t\r\n\t const res=await fetch(`http://localhost:3030/api/users/address/add`,{\r\n        method:\"post\",\r\n        headers:{'Content-Type':\"application/json\",Authorization:token},\r\n        body:JSON.stringify({\r\n\t\t\taddress:address,\r\n\t\t\tuid:uid\r\n      }) \r\n    }) \r\n\tif(res){\r\n\t\tprops.isUpdated(Math.random())\r\n\t\tprops.onHide()\r\n\t}\r\n    } catch(err) {\r\n\t\tconsole.log(err)\r\n     \r\n    }\r\n}\r\n   \r\n\t\r\n    \treturn (\r\n\t        <Modal \r\n\t        \tshow={props.show} \r\n\t        \tonHide={props.onHide}\r\n\t\t        centered\r\n\t\t   \t  >\r\n\t\t\t  <Modal.Header closeButton={true}>\r\n\t\t\t    <Modal.Title as='h5' id=\"add-address\">Add Delivery Address</Modal.Title>\r\n\t\t\t  </Modal.Header>\r\n\r\n\t\t\t  <Modal.Body>\r\n  \t\t\t\t<Form onSubmit={handleSubmit}> \r\n             <div className=\"form-row\">\r\n                <Form.Group className=\"col-md-12\">\r\n                   <Form.Label>House No.</Form.Label>\r\n                   <InputGroup>\r\n                      <Form.Control type=\"text\" placeholder=\"House no.\" ref={housenoRef} />\r\n                   </InputGroup>\r\n                </Form.Group>\r\n\t\t\t\t<Form.Group className=\"col-md-12\">\r\n                   <Form.Label>Address Line 1</Form.Label>\r\n                   <InputGroup>\r\n                      <Form.Control type=\"text\" placeholder=\"Line 1\" ref={line1Ref} />\r\n                   </InputGroup>\r\n                </Form.Group>\r\n\t\t\t\t<Form.Group className=\"col-md-12\">\r\n                   <Form.Label>Address Line 2</Form.Label>\r\n                   <InputGroup>\r\n                      <Form.Control type=\"text\" placeholder=\"Line 2\" ref={line2Ref} />\r\n                   </InputGroup>\r\n                </Form.Group>\r\n\t\t\t\t<Form.Group className=\"col-md-12\">\r\n                   <Form.Label>City</Form.Label>\r\n                   <InputGroup>\r\n                      <Form.Control type=\"text\" placeholder=\"City\" ref={cityRef} />\r\n                   </InputGroup>\r\n                </Form.Group>\r\n\t\t\t\t<Form.Group className=\"col-md-12\">\r\n                   <Form.Label>State</Form.Label>\r\n                   <InputGroup>\r\n                      <Form.Control type=\"text\" placeholder=\"State\" ref={stateRef} />\r\n                   </InputGroup>\r\n                </Form.Group>\r\n\t\t\t\t<Form.Group className=\"col-md-12\">\r\n                   <Form.Label>Pincode</Form.Label>\r\n                   <InputGroup>\r\n                      <Form.Control type=\"number\" placeholder=\"Pincode\" ref={pincodeRef} />\r\n                   </InputGroup>\r\n                </Form.Group>\r\n                \r\n                \r\n                {/* <Form.Group className=\"mb-0 col-md-12\">\r\n                   <Form.Label>Nickname</Form.Label>\r\n                   <ButtonToolbar>\r\n                      <ToggleButtonGroup className=\"d-flex w-100\" type=\"radio\" name=\"options\" defaultValue={1}>\r\n    \t\t\t\t\t\t\t    <ToggleButton variant='info' value={1}>\r\n    \t\t\t\t\t\t\t      Home\r\n    \t\t\t\t\t\t\t    </ToggleButton>\r\n    \t\t\t\t\t\t\t    <ToggleButton variant='info' value={2}>\r\n    \t\t\t\t\t\t\t      Work\r\n    \t\t\t\t\t\t\t    </ToggleButton>\r\n    \t\t\t\t\t\t\t    <ToggleButton variant='info' value={3}>\r\n    \t\t\t\t\t\t\t      Other\r\n    \t\t\t\t\t\t\t    </ToggleButton>\r\n        \t\t\t\t\t    </ToggleButtonGroup>\r\n    \t\t\t\t\t\t  </ButtonToolbar>\r\n                </Form.Group> */}\r\n             </div>\r\n          </Form>      \r\n\t\t\t  </Modal.Body>\r\n\r\n\t\t\t  <Modal.Footer>\r\n\t\t\t    <Button type='button' onClick={props.onHide} variant=\"primary\" className=\"d-flex w-50 text-center justify-content-center\">Cancel</Button>\r\n\t\t\t    <Button type='button' onClick={handleSubmit} variant=\"primary\" className='d-flex w-50 text-center justify-content-center'>Submit</Button>\r\n\t\t\t  </Modal.Footer>\r\n\t\t\t</Modal>\r\n    \t);\r\n\t\t\t}\r\n","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Order\\Cart.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\home\\TopSearch.js",["342","343"],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\home\\ProductBox.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\MayLikeItem.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\cart\\CartDropdownHeader.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\OrderCard.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\modals\\DeleteAddressModal.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\PaymentCard.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\common\\AddressCard.js",["344"],"import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Card,Media,Button} from 'react-bootstrap';\r\nimport Icofont from 'react-icofont';\r\nimport PropTypes from 'prop-types'; \r\n\r\nfunction AddressCard(props) {\r\n\r\n\t\r\n    \treturn (\r\n        <Card className={\"bg-white addresses-item mb-4 \" + (props.boxClass)}>\r\n            <div className=\"gold-members p-4\">\r\n               <Media>\r\n                  <div className=\"mr-3\"><Icofont icon={props.icoIcon} className={props.iconclassName} /></div>\r\n                  <div className=\"media-body\">\r\n                     <h6 className=\"mb-1 text-secondary\">{props.title}</h6>\r\n                     <p className=\"text-black\">{props.address}\r\n                     </p>\r\n                     <p className=\"mb-0 text-black font-weight-bold\">\r\n                        <Link className=\"text-primary mr-3\" to=\"#\" onClick={props.onEditClick}><Icofont icon=\"ui-edit\" /> EDIT</Link>\r\n                        <Link className=\"text-danger\" to=\"#\" onClick={props.onDeleteClick}><Icofont icon=\"ui-delete\" /> DELETE</Link></p>\r\n                  </div>\r\n               </Media>\r\n            </div>\r\n        </Card>\r\n    \t);\r\n    }\r\n\r\n\r\nAddressCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icoIcon: PropTypes.string.isRequired,\r\n  iconclassName: PropTypes.string,\r\n  address: PropTypes.string,\r\n  onEditClick: PropTypes.func.isRequired,\r\n  onDeleteClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddressCard;","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\modals\\EditAddressModal.js",["345","346","347"],"import React from 'react';\r\nimport {Form,InputGroup,Modal,ButtonToolbar,Button,ToggleButton,ToggleButtonGroup} from 'react-bootstrap';\r\n\r\nexport default function EditAddressModal(props) {\r\nconst housenoRef=React.useRef()\r\nconst line1Ref=React.useRef()\r\nconst line2Ref=React.useRef()\r\nconst cityRef=React.useRef()\r\nconst stateRef=React.useRef()\r\nconst pincodeRef=React.useRef()\r\n\r\nconst {token,uid}=JSON.parse(localStorage.getItem('userData'))\r\nconst handleSubmit=async (e)=>{\r\n\te.preventDefault()\r\n   const address ={\r\n\t   housenumber:housenoRef.current.value,\r\n\t   line1:line1Ref.current.value,\r\n\t   line2:line2Ref.current.value,\r\n\t   city:cityRef.current.value,\r\n\t   state:stateRef.current.value,\r\n\t   pincode:pincodeRef.current.value\r\n   }\r\n\r\n    try {\t\r\n\t const res=await fetch(`http://localhost:3030/api/users/address/edit`,{\r\n        method:\"post\",\r\n        headers:{'Content-Type':\"application/json\",Authorization:token},\r\n        body:JSON.stringify({\r\n\t\t\taddress:address,\r\n            uid:uid,\r\n            addressId:props.addressId\r\n      }) \r\n    }) \r\n\tif(res){\r\n        props.isUpdated(Math.random())\r\n        props.onHide()\r\n\t}\r\n    } catch(err) {\r\n\t\tconsole.log(err)\r\n    }\r\n}\r\n   \r\n\t\r\n    \treturn (\r\n\t        <Modal \r\n\t        \tshow={props.show} \r\n\t        \tonHide={props.onHide}\r\n\t\t        centered\r\n\t\t   \t  >\r\n\t\t\t  <Modal.Header closeButton={true}>\r\n\t\t\t    <Modal.Title as='h5' id=\"add-address\">Edit Address</Modal.Title>\r\n\t\t\t  </Modal.Header>\r\n\r\n\t\t\t  <Modal.Body>\r\n  \t\t\t\t<Form onSubmit={handleSubmit}> \r\n             <div className=\"form-row\">\r\n                <Form.Group className=\"col-md-12\">\r\n                   <Form.Label>House No.</Form.Label>\r\n                   <InputGroup>\r\n                      <Form.Control type=\"text\" placeholder=\"House no.\" ref={housenoRef} />\r\n                   </InputGroup>\r\n                </Form.Group>\r\n\t\t\t\t<Form.Group className=\"col-md-12\">\r\n                   <Form.Label>Address Line 1</Form.Label>\r\n                   <InputGroup>\r\n                      <Form.Control type=\"text\" placeholder=\"Line 1\" ref={line1Ref} />\r\n                   </InputGroup>\r\n                </Form.Group>\r\n\t\t\t\t<Form.Group className=\"col-md-12\">\r\n                   <Form.Label>Address Line 2</Form.Label>\r\n                   <InputGroup>\r\n                      <Form.Control type=\"text\" placeholder=\"Line 2\" ref={line2Ref} />\r\n                   </InputGroup>\r\n                </Form.Group>\r\n\t\t\t\t<Form.Group className=\"col-md-12\">\r\n                   <Form.Label>City</Form.Label>\r\n                   <InputGroup>\r\n                      <Form.Control type=\"text\" placeholder=\"City\" ref={cityRef} />\r\n                   </InputGroup>\r\n                </Form.Group>\r\n\t\t\t\t<Form.Group className=\"col-md-12\">\r\n                   <Form.Label>State</Form.Label>\r\n                   <InputGroup>\r\n                      <Form.Control type=\"text\" placeholder=\"State\" ref={stateRef} />\r\n                   </InputGroup>\r\n                </Form.Group>\r\n\t\t\t\t<Form.Group className=\"col-md-12\">\r\n                   <Form.Label>Pincode</Form.Label>\r\n                   <InputGroup>\r\n                      <Form.Control type=\"number\" placeholder=\"Pincode\" ref={pincodeRef} />\r\n                   </InputGroup>\r\n                </Form.Group>\r\n                \r\n             </div>\r\n          </Form>      \r\n\t\t\t  </Modal.Body>\r\n\r\n\t\t\t  <Modal.Footer>\r\n\t\t\t    <Button type='button' onClick={props.onHide} variant=\"primary\" className=\"d-flex w-50 text-center justify-content-center\">Cancel</Button>\r\n\t\t\t    <Button type='button' onClick={handleSubmit} variant=\"primary\" className='d-flex w-50 text-center justify-content-center'>Submit</Button>\r\n\t\t\t  </Modal.Footer>\r\n\t\t\t</Modal>\r\n    \t);\r\n\t\t\t}\r\n","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\ReviewCard\\index.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\staticPages\\ContactUS\\Index.js",["348"],"import React, { useState } from 'react';\r\nimport './style.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMapMarkerAlt, faPhone, faMobile } from '@fortawesome/free-solid-svg-icons';\r\nimport LocationOffice from '../../../assets/location.jpeg';\r\nconst Index = () => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [comment, setComment] = useState('');\r\n    return (\r\n        <div className=\"contact\">\r\n            <div className=\"contact_card shadow\">\r\n                <h3 className=\"contact_card_heading user_select_disable\">GET IN TOUCH</h3>\r\n                <div className=\"contact_card_details\">\r\n                    <div className=\"contact_card_popups\">\r\n                        <div className=\"contact_card_popups_social user_select_disable\">\r\n                            Our Social Media handle:{' '}\r\n                            <a href=\"https://www.facebook.com/wefooddude\" rel=\"noreferrer\" target=\"_blank\">\r\n                                <i class=\"fa fa-facebook contact_card_popups_socio\" aria-hidden=\"true\"></i>\r\n                            </a>\r\n                            <a href=\"https://www.instagram.com/wefooddude/\" rel=\"noreferrer\" target=\"_blank\">\r\n                                <i class=\"fa fa-instagram contact_card_popups_socio\" aria-hidden=\"true\"></i>\r\n                            </a>\r\n                            <a href=\"https://www.linkedin.com/company/70449147/\" rel=\"noreferrer\" target=\"_blank\">\r\n                                <i class=\"fa fa-linkedin contact_card_popups_socio\" aria-hidden=\"true\"></i>\r\n                            </a>\r\n                            <a href=\"https://twitter.com/home\" rel=\"noreferrer\" target=\"_blank\">\r\n                                <i class=\"fa fa-twitter contact_card_popups_socio\" aria-hidden=\"true\"></i>\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"contact_card_popups_detail\">\r\n                            <i class=\"fa fa-envelope-o\" aria-hidden=\"true\"></i>{' '}\r\n                            <a href=\"mailto:info@fooddude\" rel=\"noreferrer\" target=\"_blank\">\r\n                                Mail: info@fooddude\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"contact_card_popups_detail\">\r\n                            <FontAwesomeIcon icon={faPhone} />{' '}\r\n                            <a href=\"tel:+916371830551\" rel=\"noreferrer\" target=\"_blank\">\r\n                                Phone: +91-6371830551\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"contact_card_popups_detail\">\r\n                            <i class=\"fa fa-whatsapp\" aria-hidden=\"true\"></i>{' '}\r\n                            <a href=\"https://wa.me/+916371830551\" rel=\"noreferrer\" target=\"_blank\">\r\n                                Whatsapp: +91-6371830551\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"contact_card_popups_detail\">\r\n                            <FontAwesomeIcon icon={faMapMarkerAlt} />{' '}\r\n                            <a href=\"https://maps.apple.com/?ll=20.2386,85.8397\" rel=\"noreferrer\" target=\"_blank\">\r\n                                Gouri Nagar,Old Town Samantarapur, Bhubaneswar, Khordha, Orissa, 751002\r\n                            </a>\r\n                        </div>\r\n                        <img src={LocationOffice} alt=\"Office Location\" className=\"contact_card_popups_location\" />\r\n                    </div>\r\n                    <div className=\"contact_card_direct\">\r\n                        <h4 className=\"contact_card_direct_heading user_select_disable\">Leave Us A Comment</h4>\r\n                        <form action=\"submit\">\r\n                            <div className=\"contact_card_direct_inputholder\">\r\n                                <input\r\n                                    value={name}\r\n                                    onChange={(e) => {\r\n                                        setName(e.target.value);\r\n                                    }}\r\n                                    name=\"name\"\r\n                                    type=\"text\"\r\n                                    required\r\n                                />\r\n                                <label className={name !== '' && 'labelactive'} for=\"name\">\r\n                                    Name\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"contact_card_direct_inputholder\">\r\n                                <input\r\n                                    value={email}\r\n                                    onChange={(e) => {\r\n                                        setEmail(e.target.value);\r\n                                    }}\r\n                                    name=\"email\"\r\n                                    type=\"email\"\r\n                                    required\r\n                                />\r\n                                <label className={email !== '' && 'labelactive'} for=\"email\">\r\n                                    Email\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"contact_card_direct_inputholder-2\">\r\n                                <textarea\r\n                                    value={comment}\r\n                                    onChange={(e) => {\r\n                                        setComment(e.target.value);\r\n                                    }}\r\n                                    name=\"comment\"\r\n                                    type=\"text\"\r\n                                    required\r\n                                />\r\n                                <label className={`label_alt ${comment !== '' && 'labelactive-2'}`} for=\"comment\">\r\n                                    Message\r\n                                </label>\r\n                            </div>\r\n                            <button disabled={true} type=\"submit\" className=\"contact_card_direct_submit\">\r\n                                Submit\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Index;\r\n","C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Input\\Index.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\staticPages\\Popup\\index.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\contexts\\OrderContext.js",[],"C:\\Users\\santosh\\Desktop\\react-practice\\FoodDude-frontend-git\\src\\components\\Spinner\\index.js",[],{"ruleId":"349","replacedBy":"350"},{"ruleId":"351","replacedBy":"352"},{"ruleId":"353","severity":1,"message":"354","line":92,"column":7,"nodeType":"355","messageId":"356","endLine":92,"endColumn":14},{"ruleId":"353","severity":1,"message":"354","line":261,"column":7,"nodeType":"355","messageId":"356","endLine":261,"endColumn":14},{"ruleId":"353","severity":1,"message":"354","line":549,"column":7,"nodeType":"355","messageId":"356","endLine":549,"endColumn":14},{"ruleId":"353","severity":1,"message":"357","line":6,"column":8,"nodeType":"355","messageId":"356","endLine":6,"endColumn":18},{"ruleId":"353","severity":1,"message":"358","line":7,"column":8,"nodeType":"355","messageId":"356","endLine":7,"endColumn":14},{"ruleId":"353","severity":1,"message":"359","line":8,"column":8,"nodeType":"355","messageId":"356","endLine":8,"endColumn":16},{"ruleId":"353","severity":1,"message":"360","line":16,"column":21,"nodeType":"355","messageId":"356","endLine":16,"endColumn":32},{"ruleId":"353","severity":1,"message":"361","line":4,"column":27,"nodeType":"355","messageId":"356","endLine":4,"endColumn":32},{"ruleId":"353","severity":1,"message":"362","line":3,"column":10,"nodeType":"355","messageId":"356","endLine":3,"endColumn":14},{"ruleId":"353","severity":1,"message":"363","line":11,"column":5,"nodeType":"355","messageId":"356","endLine":11,"endColumn":8},{"ruleId":"353","severity":1,"message":"364","line":12,"column":5,"nodeType":"355","messageId":"356","endLine":12,"endColumn":8},{"ruleId":"353","severity":1,"message":"365","line":13,"column":5,"nodeType":"355","messageId":"356","endLine":13,"endColumn":18},{"ruleId":"353","severity":1,"message":"366","line":14,"column":5,"nodeType":"355","messageId":"356","endLine":14,"endColumn":17},{"ruleId":"353","severity":1,"message":"367","line":15,"column":5,"nodeType":"355","messageId":"356","endLine":15,"endColumn":22},{"ruleId":"353","severity":1,"message":"368","line":20,"column":8,"nodeType":"355","messageId":"356","endLine":20,"endColumn":21},{"ruleId":"353","severity":1,"message":"358","line":27,"column":8,"nodeType":"355","messageId":"356","endLine":27,"endColumn":14},{"ruleId":"353","severity":1,"message":"369","line":28,"column":8,"nodeType":"355","messageId":"356","endLine":28,"endColumn":14},{"ruleId":"353","severity":1,"message":"370","line":50,"column":12,"nodeType":"355","messageId":"356","endLine":50,"endColumn":24},{"ruleId":"353","severity":1,"message":"371","line":52,"column":12,"nodeType":"355","messageId":"356","endLine":52,"endColumn":21},{"ruleId":"353","severity":1,"message":"372","line":52,"column":23,"nodeType":"355","messageId":"356","endLine":52,"endColumn":35},{"ruleId":"373","severity":1,"message":"374","line":256,"column":8,"nodeType":"375","endLine":256,"endColumn":23,"suggestions":"376"},{"ruleId":"373","severity":1,"message":"377","line":284,"column":5,"nodeType":"378","endLine":284,"endColumn":20,"suggestions":"379"},{"ruleId":"353","severity":1,"message":"380","line":17,"column":13,"nodeType":"355","messageId":"356","endLine":17,"endColumn":22},{"ruleId":"353","severity":1,"message":"354","line":63,"column":7,"nodeType":"355","messageId":"356","endLine":63,"endColumn":14},{"ruleId":"353","severity":1,"message":"381","line":2,"column":8,"nodeType":"355","messageId":"356","endLine":2,"endColumn":13},{"ruleId":"353","severity":1,"message":"362","line":3,"column":19,"nodeType":"355","messageId":"356","endLine":3,"endColumn":23},{"ruleId":"353","severity":1,"message":"382","line":4,"column":54,"nodeType":"355","messageId":"356","endLine":4,"endColumn":59},{"ruleId":"353","severity":1,"message":"383","line":14,"column":34,"nodeType":"355","messageId":"356","endLine":14,"endColumn":45},{"ruleId":"353","severity":1,"message":"384","line":16,"column":12,"nodeType":"355","messageId":"356","endLine":16,"endColumn":17},{"ruleId":"385","severity":1,"message":"386","line":8,"column":49,"nodeType":"387","endLine":8,"endColumn":75},{"ruleId":"353","severity":1,"message":"362","line":2,"column":9,"nodeType":"355","messageId":"356","endLine":2,"endColumn":13},{"ruleId":"353","severity":1,"message":"361","line":3,"column":9,"nodeType":"355","messageId":"356","endLine":3,"endColumn":14},{"ruleId":"353","severity":1,"message":"382","line":3,"column":15,"nodeType":"355","messageId":"356","endLine":3,"endColumn":20},{"ruleId":"353","severity":1,"message":"388","line":5,"column":8,"nodeType":"355","messageId":"356","endLine":5,"endColumn":15},{"ruleId":"353","severity":1,"message":"362","line":2,"column":9,"nodeType":"355","messageId":"356","endLine":2,"endColumn":13},{"ruleId":"353","severity":1,"message":"389","line":3,"column":20,"nodeType":"355","messageId":"356","endLine":3,"endColumn":26},{"ruleId":"353","severity":1,"message":"390","line":9,"column":15,"nodeType":"355","messageId":"356","endLine":9,"endColumn":23},{"ruleId":"353","severity":1,"message":"391","line":1,"column":17,"nodeType":"355","messageId":"356","endLine":1,"endColumn":26},{"ruleId":"353","severity":1,"message":"389","line":3,"column":10,"nodeType":"355","messageId":"356","endLine":3,"endColumn":16},{"ruleId":"349","replacedBy":"392"},{"ruleId":"351","replacedBy":"393"},{"ruleId":"373","severity":1,"message":"394","line":23,"column":8,"nodeType":"375","endLine":23,"endColumn":19,"suggestions":"395"},{"ruleId":"373","severity":1,"message":"396","line":55,"column":8,"nodeType":"375","endLine":55,"endColumn":17,"suggestions":"397"},{"ruleId":"353","severity":1,"message":"370","line":11,"column":9,"nodeType":"355","messageId":"356","endLine":11,"endColumn":21},{"ruleId":"353","severity":1,"message":"370","line":14,"column":12,"nodeType":"355","messageId":"356","endLine":14,"endColumn":24},{"ruleId":"373","severity":1,"message":"398","line":46,"column":4,"nodeType":"375","endLine":46,"endColumn":13,"suggestions":"399"},{"ruleId":"353","severity":1,"message":"365","line":2,"column":31,"nodeType":"355","messageId":"356","endLine":2,"endColumn":44},{"ruleId":"353","severity":1,"message":"366","line":2,"column":52,"nodeType":"355","messageId":"356","endLine":2,"endColumn":64},{"ruleId":"353","severity":1,"message":"367","line":2,"column":65,"nodeType":"355","messageId":"356","endLine":2,"endColumn":82},{"ruleId":"353","severity":1,"message":"400","line":10,"column":8,"nodeType":"355","messageId":"356","endLine":10,"endColumn":26},{"ruleId":"373","severity":1,"message":"401","line":42,"column":8,"nodeType":"375","endLine":42,"endColumn":17,"suggestions":"402"},{"ruleId":"353","severity":1,"message":"389","line":3,"column":20,"nodeType":"355","messageId":"356","endLine":3,"endColumn":26},{"ruleId":"353","severity":1,"message":"365","line":2,"column":31,"nodeType":"355","messageId":"356","endLine":2,"endColumn":44},{"ruleId":"353","severity":1,"message":"366","line":2,"column":52,"nodeType":"355","messageId":"356","endLine":2,"endColumn":64},{"ruleId":"353","severity":1,"message":"367","line":2,"column":65,"nodeType":"355","messageId":"356","endLine":2,"endColumn":82},{"ruleId":"353","severity":1,"message":"403","line":4,"column":35,"nodeType":"355","messageId":"356","endLine":4,"endColumn":43},"no-native-reassign",["404"],"no-negated-in-lhs",["405"],"no-unused-vars","'options' is assigned a value but never used.","Identifier","unusedVar","'ProductBox' is defined but never used.","'Header' is defined but never used.","'CardItem' is defined but never used.","'currentUser' is assigned a value but never used.","'Image' is defined but never used.","'Link' is defined but never used.","'Tab' is defined but never used.","'Nav' is defined but never used.","'ButtonToolbar' is defined but never used.","'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'ItemsCarousel' is defined but never used.","'Footer' is defined but never used.","'recievedData' is assigned a value but never used.","'addressId' is assigned a value but never used.","'setAddressId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'cartData' and 'getQty'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCartItem' needs the current value of 'cartData'.","ArrayExpression",["406"],"React Hook useEffect contains a call to 'setPromocodeMssg'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [checkingPromocode, uid, token] as a second argument to the useEffect Hook.","MemberExpression",["407"],"'cartItems' is assigned a value but never used.","'axios' is defined but never used.","'Badge' is defined but never used.","'cartUpdated' is assigned a value but never used.","'error' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Icofont' is defined but never used.","'Button' is defined but never used.","'setFocus' is assigned a value but never used.","'Component' is defined but never used.",["404"],["405"],"React Hook useEffect has a missing dependency: 'props.title'. Either include it or remove the dependency array. If 'setQuantity' needs the current value of 'props.title', you can also switch to useReducer instead of useState and read 'props.title' in the reducer.",["408"],"React Hook React.useEffect has a missing dependency: 'logout'. Either include it or remove the dependency array.",["409"],"React Hook React.useEffect has missing dependencies: 'token' and 'uid'. Either include them or remove the dependency array.",["410"],"'CategoriesCarousel' is defined but never used.","React Hook React.useEffect has a missing dependency: 'sendingData'. Either include it or remove the dependency array.",["411"],"'faMobile' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},{"desc":"418","fix":"419"},{"desc":"420","fix":"421"},{"desc":"422","fix":"423"},"Update the dependencies array to be: [cartData, getQty, recievedData2]",{"range":"424","text":"425"},"Add dependencies array: [checkingPromocode, uid, token]",{"range":"426","text":"427"},"Update the dependencies array to be: [cartItems, props.title]",{"range":"428","text":"429"},"Update the dependencies array to be: [logout, setCart]",{"range":"430","text":"431"},"Update the dependencies array to be: [token, uid, updated]",{"range":"432","text":"433"},"Update the dependencies array to be: [pincode, sendingData]",{"range":"434","text":"435"},[9008,9023],"[cartData, getQty, recievedData2]",[10633,10633],", [checkingPromocode, uid, token]",[876,887],"[cartItems, props.title]",[2280,2289],"[logout, setCart]",[1350,1359],"[token, uid, updated]",[1565,1574],"[pincode, sendingData]"]